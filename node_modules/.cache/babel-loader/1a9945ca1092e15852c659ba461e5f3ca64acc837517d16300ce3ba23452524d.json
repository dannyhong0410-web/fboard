{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uD64D\\uC131\\uAD00\\\\Desktop\\\\FBoard\\\\src\\\\components\\\\StockPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport PageLayout from './PageLayout';\nimport StockChart from './StockChart';\nimport { fetchMultipleStockQuotes, fetchStockChartData, POPULAR_STOCKS } from '../services/stockApi';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MetricsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: 20px;\n  margin-bottom: 30px;\n`;\n_c = MetricsGrid;\nconst MetricCard = styled.div`\n  background: rgba(255, 255, 255, 0.15);\n  border-radius: 15px;\n  padding: 25px;\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  transition: transform 0.3s ease;\n\n  &:hover {\n    transform: translateY(-5px);\n  }\n`;\n_c2 = MetricCard;\nconst MetricTitle = styled.h3`\n  color: white;\n  font-size: 1.3rem;\n  margin-bottom: 15px;\n  font-weight: 600;\n`;\n_c3 = MetricTitle;\nconst MetricValue = styled.div`\n  color: #4ade80;\n  font-size: 2rem;\n  font-weight: 700;\n  margin-bottom: 10px;\n`;\n_c4 = MetricValue;\nconst MetricChange = styled.div`\n  color: ${props => props.isPositive ? '#4ade80' : '#f87171'};\n  font-size: 1rem;\n  font-weight: 500;\n`;\n_c5 = MetricChange;\nconst MetricDetails = styled.div`\n  color: rgba(255, 255, 255, 0.8);\n  font-size: 0.9rem;\n  margin-top: 10px;\n`;\n_c6 = MetricDetails;\nconst LoadingCard = styled.div`\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 15px;\n  padding: 25px;\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  text-align: center;\n  color: white;\n`;\n_c7 = LoadingCard;\nconst RefreshButton = styled.button`\n  background: rgba(255, 255, 255, 0.2);\n  border: none;\n  border-radius: 10px;\n  padding: 12px 24px;\n  color: white;\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  margin-bottom: 20px;\n\n  &:hover {\n    background: rgba(255, 255, 255, 0.3);\n    transform: translateY(-2px);\n  }\n`;\n_c8 = RefreshButton;\nconst StockPage = () => {\n  _s();\n  const [stockData, setStockData] = useState([]);\n  const [chartData, setChartData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [chartLoading, setChartLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedStock, setSelectedStock] = useState('^GSPC'); // S&P 500 기본 선택\n  const [timeRange, setTimeRange] = useState('1mo');\n\n  // 주식 데이터 가져오기\n  const fetchStockData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await fetchMultipleStockQuotes(POPULAR_STOCKS);\n      setStockData(data);\n    } catch (err) {\n      setError('주식 데이터를 불러올 수 없습니다.');\n      console.error('Error fetching stock data:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 차트 데이터 가져오기\n  const fetchChartData = async (symbol, range) => {\n    try {\n      setChartLoading(true);\n      setError(null);\n      const data = await fetchStockChartData(symbol, range);\n      setChartData(data);\n    } catch (err) {\n      setError('차트 데이터를 불러올 수 없습니다.');\n      console.error('Error fetching chart data:', err);\n    } finally {\n      setChartLoading(false);\n    }\n  };\n\n  // 컴포넌트 마운트 시 데이터 로드\n  useEffect(() => {\n    fetchStockData();\n  }, []);\n\n  // 선택된 주식이나 시간 범위 변경 시 차트 데이터 로드\n  useEffect(() => {\n    if (selectedStock) {\n      fetchChartData(selectedStock, timeRange);\n    }\n  }, [selectedStock, timeRange]);\n\n  // 주식 선택 핸들러\n  const handleStockSelect = symbol => {\n    setSelectedStock(symbol);\n  };\n\n  // 시간 범위 변경 핸들러\n  const handleTimeRangeChange = range => {\n    setTimeRange(range);\n  };\n\n  // 주식 이름 매핑\n  const getStockDisplayName = symbol => {\n    const names = {\n      '^GSPC': 'S&P 500',\n      '^IXIC': 'NASDAQ',\n      '^DJI': 'DOW JONES',\n      '^VIX': 'VIX',\n      '^KS11': 'KOSPI',\n      '^KQ11': 'KOSDAQ'\n    };\n    return names[symbol] || symbol;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(PageLayout, {\n      title: \"Stock Market\",\n      children: /*#__PURE__*/_jsxDEV(LoadingCard, {\n        children: \"\\uC8FC\\uC2DD \\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(PageLayout, {\n    title: \"Stock Market\",\n    children: [/*#__PURE__*/_jsxDEV(RefreshButton, {\n      onClick: fetchStockData,\n      children: \"\\uD83D\\uDD04 \\uB370\\uC774\\uD130 \\uC0C8\\uB85C\\uACE0\\uCE68\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MetricsGrid, {\n      children: stockData.map((stock, index) => {\n        var _stock$price, _stock$changePercent, _stock$previousClose, _stock$volume;\n        return /*#__PURE__*/_jsxDEV(MetricCard, {\n          onClick: () => handleStockSelect(stock.symbol),\n          style: {\n            cursor: 'pointer',\n            border: selectedStock === stock.symbol ? '2px solid #4ade80' : undefined\n          },\n          children: [/*#__PURE__*/_jsxDEV(MetricTitle, {\n            children: getStockDisplayName(stock.symbol)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), stock.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: '#f87171'\n            },\n            children: \"\\uB370\\uC774\\uD130 \\uC624\\uB958\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(MetricValue, {\n              children: [stock.currency === 'USD' ? '$' : '', ((_stock$price = stock.price) === null || _stock$price === void 0 ? void 0 : _stock$price.toFixed(2)) || 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MetricChange, {\n              isPositive: stock.changePercent >= 0,\n              children: [stock.changePercent >= 0 ? '+' : '', ((_stock$changePercent = stock.changePercent) === null || _stock$changePercent === void 0 ? void 0 : _stock$changePercent.toFixed(2)) || 'N/A', \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MetricDetails, {\n              children: [\"\\uC804\\uC77C: \", ((_stock$previousClose = stock.previousClose) === null || _stock$previousClose === void 0 ? void 0 : _stock$previousClose.toFixed(2)) || 'N/A', \" | \\uAC70\\uB798\\uB7C9: \", ((_stock$volume = stock.volume) === null || _stock$volume === void 0 ? void 0 : _stock$volume.toLocaleString()) || 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, stock.symbol, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), selectedStock && /*#__PURE__*/_jsxDEV(StockChart, {\n      symbol: getStockDisplayName(selectedStock),\n      data: chartData,\n      loading: chartLoading,\n      error: error,\n      timeRange: timeRange,\n      onTimeRangeChange: handleTimeRangeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n_s(StockPage, \"JTXkYouqRIK2GL6R5w3RZ2Xwp4Q=\");\n_c9 = StockPage;\nexport default StockPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"MetricsGrid\");\n$RefreshReg$(_c2, \"MetricCard\");\n$RefreshReg$(_c3, \"MetricTitle\");\n$RefreshReg$(_c4, \"MetricValue\");\n$RefreshReg$(_c5, \"MetricChange\");\n$RefreshReg$(_c6, \"MetricDetails\");\n$RefreshReg$(_c7, \"LoadingCard\");\n$RefreshReg$(_c8, \"RefreshButton\");\n$RefreshReg$(_c9, \"StockPage\");","map":{"version":3,"names":["React","useState","useEffect","styled","PageLayout","StockChart","fetchMultipleStockQuotes","fetchStockChartData","POPULAR_STOCKS","jsxDEV","_jsxDEV","Fragment","_Fragment","MetricsGrid","div","_c","MetricCard","_c2","MetricTitle","h3","_c3","MetricValue","_c4","MetricChange","props","isPositive","_c5","MetricDetails","_c6","LoadingCard","_c7","RefreshButton","button","_c8","StockPage","_s","stockData","setStockData","chartData","setChartData","loading","setLoading","chartLoading","setChartLoading","error","setError","selectedStock","setSelectedStock","timeRange","setTimeRange","fetchStockData","data","err","console","fetchChartData","symbol","range","handleStockSelect","handleTimeRangeChange","getStockDisplayName","names","title","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","stock","index","_stock$price","_stock$changePercent","_stock$previousClose","_stock$volume","style","cursor","border","undefined","color","currency","price","toFixed","changePercent","previousClose","volume","toLocaleString","onTimeRangeChange","_c9","$RefreshReg$"],"sources":["C:/Users/홍성관/Desktop/FBoard/src/components/StockPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport PageLayout from './PageLayout';\r\nimport StockChart from './StockChart';\r\nimport { fetchMultipleStockQuotes, fetchStockChartData, POPULAR_STOCKS } from '../services/stockApi';\r\n\r\nconst MetricsGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n  gap: 20px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst MetricCard = styled.div`\r\n  background: rgba(255, 255, 255, 0.15);\r\n  border-radius: 15px;\r\n  padding: 25px;\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n  transition: transform 0.3s ease;\r\n\r\n  &:hover {\r\n    transform: translateY(-5px);\r\n  }\r\n`;\r\n\r\nconst MetricTitle = styled.h3`\r\n  color: white;\r\n  font-size: 1.3rem;\r\n  margin-bottom: 15px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst MetricValue = styled.div`\r\n  color: #4ade80;\r\n  font-size: 2rem;\r\n  font-weight: 700;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst MetricChange = styled.div`\r\n  color: ${props => props.isPositive ? '#4ade80' : '#f87171'};\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst MetricDetails = styled.div`\r\n  color: rgba(255, 255, 255, 0.8);\r\n  font-size: 0.9rem;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst LoadingCard = styled.div`\r\n  background: rgba(255, 255, 255, 0.1);\r\n  border-radius: 15px;\r\n  padding: 25px;\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n  text-align: center;\r\n  color: white;\r\n`;\r\n\r\nconst RefreshButton = styled.button`\r\n  background: rgba(255, 255, 255, 0.2);\r\n  border: none;\r\n  border-radius: 10px;\r\n  padding: 12px 24px;\r\n  color: white;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  margin-bottom: 20px;\r\n\r\n  &:hover {\r\n    background: rgba(255, 255, 255, 0.3);\r\n    transform: translateY(-2px);\r\n  }\r\n`;\r\n\r\nconst StockPage = () => {\r\n  const [stockData, setStockData] = useState([]);\r\n  const [chartData, setChartData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [chartLoading, setChartLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [selectedStock, setSelectedStock] = useState('^GSPC'); // S&P 500 기본 선택\r\n  const [timeRange, setTimeRange] = useState('1mo');\r\n\r\n  // 주식 데이터 가져오기\r\n  const fetchStockData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const data = await fetchMultipleStockQuotes(POPULAR_STOCKS);\r\n      setStockData(data);\r\n    } catch (err) {\r\n      setError('주식 데이터를 불러올 수 없습니다.');\r\n      console.error('Error fetching stock data:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 차트 데이터 가져오기\r\n  const fetchChartData = async (symbol, range) => {\r\n    try {\r\n      setChartLoading(true);\r\n      setError(null);\r\n      const data = await fetchStockChartData(symbol, range);\r\n      setChartData(data);\r\n    } catch (err) {\r\n      setError('차트 데이터를 불러올 수 없습니다.');\r\n      console.error('Error fetching chart data:', err);\r\n    } finally {\r\n      setChartLoading(false);\r\n    }\r\n  };\r\n\r\n  // 컴포넌트 마운트 시 데이터 로드\r\n  useEffect(() => {\r\n    fetchStockData();\r\n  }, []);\r\n\r\n  // 선택된 주식이나 시간 범위 변경 시 차트 데이터 로드\r\n  useEffect(() => {\r\n    if (selectedStock) {\r\n      fetchChartData(selectedStock, timeRange);\r\n    }\r\n  }, [selectedStock, timeRange]);\r\n\r\n  // 주식 선택 핸들러\r\n  const handleStockSelect = (symbol) => {\r\n    setSelectedStock(symbol);\r\n  };\r\n\r\n  // 시간 범위 변경 핸들러\r\n  const handleTimeRangeChange = (range) => {\r\n    setTimeRange(range);\r\n  };\r\n\r\n  // 주식 이름 매핑\r\n  const getStockDisplayName = (symbol) => {\r\n    const names = {\r\n      '^GSPC': 'S&P 500',\r\n      '^IXIC': 'NASDAQ',\r\n      '^DJI': 'DOW JONES',\r\n      '^VIX': 'VIX',\r\n      '^KS11': 'KOSPI',\r\n      '^KQ11': 'KOSDAQ'\r\n    };\r\n    return names[symbol] || symbol;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <PageLayout title=\"Stock Market\">\r\n        <LoadingCard>주식 데이터를 불러오는 중...</LoadingCard>\r\n      </PageLayout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <PageLayout title=\"Stock Market\">\r\n      <RefreshButton onClick={fetchStockData}>\r\n        🔄 데이터 새로고침\r\n      </RefreshButton>\r\n\r\n      <MetricsGrid>\r\n        {stockData.map((stock, index) => (\r\n          <MetricCard \r\n            key={stock.symbol} \r\n            onClick={() => handleStockSelect(stock.symbol)}\r\n            style={{ \r\n              cursor: 'pointer',\r\n              border: selectedStock === stock.symbol ? '2px solid #4ade80' : undefined\r\n            }}\r\n          >\r\n            <MetricTitle>{getStockDisplayName(stock.symbol)}</MetricTitle>\r\n            {stock.error ? (\r\n              <div style={{ color: '#f87171' }}>데이터 오류</div>\r\n            ) : (\r\n              <>\r\n                <MetricValue>\r\n                  {stock.currency === 'USD' ? '$' : ''}\r\n                  {stock.price?.toFixed(2) || 'N/A'}\r\n                </MetricValue>\r\n                <MetricChange isPositive={stock.changePercent >= 0}>\r\n                  {stock.changePercent >= 0 ? '+' : ''}\r\n                  {stock.changePercent?.toFixed(2) || 'N/A'}%\r\n                </MetricChange>\r\n                <MetricDetails>\r\n                  전일: {stock.previousClose?.toFixed(2) || 'N/A'} | \r\n                  거래량: {stock.volume?.toLocaleString() || 'N/A'}\r\n                </MetricDetails>\r\n              </>\r\n            )}\r\n          </MetricCard>\r\n        ))}\r\n      </MetricsGrid>\r\n\r\n      {selectedStock && (\r\n        <StockChart\r\n          symbol={getStockDisplayName(selectedStock)}\r\n          data={chartData}\r\n          loading={chartLoading}\r\n          error={error}\r\n          timeRange={timeRange}\r\n          onTimeRangeChange={handleTimeRangeChange}\r\n        />\r\n      )}\r\n    </PageLayout>\r\n  );\r\n};\r\n\r\nexport default StockPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}