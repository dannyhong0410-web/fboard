{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uD64D\\uC131\\uAD00\\\\Desktop\\\\FBoard\\\\src\\\\components\\\\StockPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport PageLayout from './PageLayout';\nimport StockChart from './StockChart';\nimport { fetchMultipleStockQuotes, fetchStockChartData, POPULAR_STOCKS } from '../services/stockApi';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MetricsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n  gap: 20px;\n  margin-bottom: 30px;\n`;\n_c = MetricsGrid;\nconst MetricCard = styled.div`\n  background: rgba(255, 255, 255, 0.15);\n  border-radius: 15px;\n  padding: 25px;\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  transition: transform 0.3s ease;\n\n  &:hover {\n    transform: translateY(-5px);\n  }\n`;\n_c2 = MetricCard;\nconst MetricTitle = styled.h3`\n  color: white;\n  font-size: 1.3rem;\n  margin-bottom: 15px;\n  font-weight: 600;\n`;\n_c3 = MetricTitle;\nconst MetricValue = styled.div`\n  color: #4ade80;\n  font-size: 2rem;\n  font-weight: 700;\n  margin-bottom: 10px;\n`;\n_c4 = MetricValue;\nconst MetricChange = styled.div`\n  color: ${props => props.isPositive ? '#4ade80' : '#f87171'};\n  font-size: 1rem;\n  font-weight: 500;\n  margin-bottom: 8px;\n`;\n_c5 = MetricChange;\nconst ReturnsContainer = styled.div`\n  display: flex;\n  gap: 15px;\n  margin-top: 15px;\n  padding-top: 15px;\n  border-top: 1px solid rgba(255, 255, 255, 0.1);\n`;\n_c6 = ReturnsContainer;\nconst ReturnItem = styled.div`\n  flex: 1;\n  text-align: center;\n`;\n_c7 = ReturnItem;\nconst ReturnLabel = styled.div`\n  color: rgba(255, 255, 255, 0.7);\n  font-size: 0.8rem;\n  margin-bottom: 4px;\n  font-weight: 500;\n`;\n_c8 = ReturnLabel;\nconst ReturnValue = styled.div`\n  color: ${props => props.isPositive ? '#4ade80' : '#f87171'};\n  font-size: 1.1rem;\n  font-weight: 600;\n`;\n_c9 = ReturnValue;\nconst MetricDetails = styled.div`\n  color: rgba(255, 255, 255, 0.8);\n  font-size: 0.9rem;\n  margin-top: 10px;\n`;\n_c0 = MetricDetails;\nconst LoadingCard = styled.div`\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 15px;\n  padding: 25px;\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  text-align: center;\n  color: white;\n`;\n_c1 = LoadingCard;\nconst RefreshButton = styled.button`\n  background: rgba(255, 255, 255, 0.2);\n  border: none;\n  border-radius: 10px;\n  padding: 12px 24px;\n  color: white;\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  margin-bottom: 20px;\n\n  &:hover {\n    background: rgba(255, 255, 255, 0.3);\n    transform: translateY(-2px);\n  }\n`;\n\n// 숫자 포맷팅 함수\n_c10 = RefreshButton;\nconst formatNumber = (value, decimals = 2) => {\n  if (value === null || value === undefined || isNaN(value)) {\n    return 'N/A';\n  }\n\n  // 소수점 둘째자리까지 반올림\n  const roundedValue = Math.round(value * Math.pow(10, decimals)) / Math.pow(10, decimals);\n\n  // 천 단위 콤마와 소수점 표시\n  return roundedValue.toLocaleString('ko-KR', {\n    minimumFractionDigits: decimals,\n    maximumFractionDigits: decimals\n  });\n};\n\n// 통화별 포맷팅 함수\nconst formatCurrency = (value, currency = 'USD', decimals = 2) => {\n  if (value === null || value === undefined || isNaN(value)) {\n    return 'N/A';\n  }\n  const symbol = currency === 'USD' ? '$' : currency === 'KRW' ? '₩' : '';\n  const formattedValue = formatNumber(value, decimals);\n  return `${symbol}${formattedValue}`;\n};\n\n// 퍼센트 포맷팅 함수\nconst formatPercent = (value, decimals = 2) => {\n  if (value === null || value === undefined || isNaN(value)) {\n    return 'N/A';\n  }\n  const sign = value >= 0 ? '+' : '';\n  const formattedValue = formatNumber(Math.abs(value), decimals);\n  return `${sign}${formattedValue}%`;\n};\nconst StockPage = () => {\n  _s();\n  const [stockData, setStockData] = useState([]);\n  const [chartData, setChartData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [chartLoading, setChartLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedStock, setSelectedStock] = useState('^GSPC'); // S&P 500 기본 선택\n  const [timeRange, setTimeRange] = useState('1mo');\n\n  // 주식 데이터 가져오기\n  const fetchStockData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await fetchMultipleStockQuotes(POPULAR_STOCKS);\n      setStockData(data);\n    } catch (err) {\n      setError('주식 데이터를 불러올 수 없습니다.');\n      console.error('Error fetching stock data:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 차트 데이터 가져오기\n  const fetchChartData = async (symbol, range) => {\n    try {\n      setChartLoading(true);\n      setError(null);\n      const data = await fetchStockChartData(symbol, range);\n      setChartData(data);\n    } catch (err) {\n      setError('차트 데이터를 불러올 수 없습니다.');\n      console.error('Error fetching chart data:', err);\n    } finally {\n      setChartLoading(false);\n    }\n  };\n\n  // 컴포넌트 마운트 시 데이터 로드\n  useEffect(() => {\n    fetchStockData();\n  }, []);\n\n  // 선택된 주식이나 시간 범위 변경 시 차트 데이터 로드\n  useEffect(() => {\n    if (selectedStock) {\n      fetchChartData(selectedStock, timeRange);\n    }\n  }, [selectedStock, timeRange]);\n\n  // 주식 선택 핸들러\n  const handleStockSelect = symbol => {\n    setSelectedStock(symbol);\n  };\n\n  // 시간 범위 변경 핸들러\n  const handleTimeRangeChange = range => {\n    setTimeRange(range);\n  };\n\n  // 주식 이름 매핑\n  const getStockDisplayName = symbol => {\n    const names = {\n      '^GSPC': 'S&P 500',\n      '^IXIC': 'NASDAQ',\n      '^DJI': 'DOW JONES',\n      '^VIX': 'VIX',\n      '^KS11': 'KOSPI',\n      '^KQ11': 'KOSDAQ'\n    };\n    return names[symbol] || symbol;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(PageLayout, {\n      title: \"Stock Market\",\n      children: /*#__PURE__*/_jsxDEV(LoadingCard, {\n        children: \"\\uC8FC\\uC2DD \\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(PageLayout, {\n    title: \"Stock Market\",\n    children: [/*#__PURE__*/_jsxDEV(RefreshButton, {\n      onClick: fetchStockData,\n      children: \"\\uD83D\\uDD04 \\uB370\\uC774\\uD130 \\uC0C8\\uB85C\\uACE0\\uCE68\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MetricsGrid, {\n      children: stockData.map((stock, index) => /*#__PURE__*/_jsxDEV(MetricCard, {\n        onClick: () => handleStockSelect(stock.symbol),\n        style: {\n          cursor: 'pointer',\n          border: selectedStock === stock.symbol ? '2px solid #4ade80' : undefined\n        },\n        children: [/*#__PURE__*/_jsxDEV(MetricTitle, {\n          children: getStockDisplayName(stock.symbol)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), stock.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: '#f87171'\n          },\n          children: \"\\uB370\\uC774\\uD130 \\uC624\\uB958\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(MetricValue, {\n            children: formatCurrency(stock.price, stock.currency)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(MetricChange, {\n            isPositive: stock.changePercent >= 0,\n            children: formatPercent(stock.changePercent)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ReturnsContainer, {\n            children: [/*#__PURE__*/_jsxDEV(ReturnItem, {\n              children: [/*#__PURE__*/_jsxDEV(ReturnLabel, {\n                children: \"3\\uAC1C\\uC6D4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ReturnValue, {\n                isPositive: stock.threeMonthReturn >= 0,\n                children: formatPercent(stock.threeMonthReturn)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ReturnItem, {\n              children: [/*#__PURE__*/_jsxDEV(ReturnLabel, {\n                children: \"YTD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ReturnValue, {\n                isPositive: stock.ytdReturn >= 0,\n                children: formatPercent(stock.ytdReturn)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(MetricDetails, {\n            children: [\"\\uC804\\uC77C: \", formatCurrency(stock.previousClose, stock.currency), \" | \\uAC70\\uB798\\uB7C9: \", formatNumber(stock.volume, 0)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, stock.symbol, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), selectedStock && /*#__PURE__*/_jsxDEV(StockChart, {\n      symbol: getStockDisplayName(selectedStock),\n      data: chartData,\n      loading: chartLoading,\n      error: error,\n      timeRange: timeRange,\n      onTimeRangeChange: handleTimeRangeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 5\n  }, this);\n};\n_s(StockPage, \"JTXkYouqRIK2GL6R5w3RZ2Xwp4Q=\");\n_c11 = StockPage;\nexport default StockPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11;\n$RefreshReg$(_c, \"MetricsGrid\");\n$RefreshReg$(_c2, \"MetricCard\");\n$RefreshReg$(_c3, \"MetricTitle\");\n$RefreshReg$(_c4, \"MetricValue\");\n$RefreshReg$(_c5, \"MetricChange\");\n$RefreshReg$(_c6, \"ReturnsContainer\");\n$RefreshReg$(_c7, \"ReturnItem\");\n$RefreshReg$(_c8, \"ReturnLabel\");\n$RefreshReg$(_c9, \"ReturnValue\");\n$RefreshReg$(_c0, \"MetricDetails\");\n$RefreshReg$(_c1, \"LoadingCard\");\n$RefreshReg$(_c10, \"RefreshButton\");\n$RefreshReg$(_c11, \"StockPage\");","map":{"version":3,"names":["React","useState","useEffect","styled","PageLayout","StockChart","fetchMultipleStockQuotes","fetchStockChartData","POPULAR_STOCKS","jsxDEV","_jsxDEV","Fragment","_Fragment","MetricsGrid","div","_c","MetricCard","_c2","MetricTitle","h3","_c3","MetricValue","_c4","MetricChange","props","isPositive","_c5","ReturnsContainer","_c6","ReturnItem","_c7","ReturnLabel","_c8","ReturnValue","_c9","MetricDetails","_c0","LoadingCard","_c1","RefreshButton","button","_c10","formatNumber","value","decimals","undefined","isNaN","roundedValue","Math","round","pow","toLocaleString","minimumFractionDigits","maximumFractionDigits","formatCurrency","currency","symbol","formattedValue","formatPercent","sign","abs","StockPage","_s","stockData","setStockData","chartData","setChartData","loading","setLoading","chartLoading","setChartLoading","error","setError","selectedStock","setSelectedStock","timeRange","setTimeRange","fetchStockData","data","err","console","fetchChartData","range","handleStockSelect","handleTimeRangeChange","getStockDisplayName","names","title","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","stock","index","style","cursor","border","color","price","changePercent","threeMonthReturn","ytdReturn","previousClose","volume","onTimeRangeChange","_c11","$RefreshReg$"],"sources":["C:/Users/홍성관/Desktop/FBoard/src/components/StockPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport PageLayout from './PageLayout';\r\nimport StockChart from './StockChart';\r\nimport { fetchMultipleStockQuotes, fetchStockChartData, POPULAR_STOCKS } from '../services/stockApi';\r\n\r\nconst MetricsGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\r\n  gap: 20px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst MetricCard = styled.div`\r\n  background: rgba(255, 255, 255, 0.15);\r\n  border-radius: 15px;\r\n  padding: 25px;\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n  transition: transform 0.3s ease;\r\n\r\n  &:hover {\r\n    transform: translateY(-5px);\r\n  }\r\n`;\r\n\r\nconst MetricTitle = styled.h3`\r\n  color: white;\r\n  font-size: 1.3rem;\r\n  margin-bottom: 15px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst MetricValue = styled.div`\r\n  color: #4ade80;\r\n  font-size: 2rem;\r\n  font-weight: 700;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst MetricChange = styled.div`\r\n  color: ${props => props.isPositive ? '#4ade80' : '#f87171'};\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nconst ReturnsContainer = styled.div`\r\n  display: flex;\r\n  gap: 15px;\r\n  margin-top: 15px;\r\n  padding-top: 15px;\r\n  border-top: 1px solid rgba(255, 255, 255, 0.1);\r\n`;\r\n\r\nconst ReturnItem = styled.div`\r\n  flex: 1;\r\n  text-align: center;\r\n`;\r\n\r\nconst ReturnLabel = styled.div`\r\n  color: rgba(255, 255, 255, 0.7);\r\n  font-size: 0.8rem;\r\n  margin-bottom: 4px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst ReturnValue = styled.div`\r\n  color: ${props => props.isPositive ? '#4ade80' : '#f87171'};\r\n  font-size: 1.1rem;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst MetricDetails = styled.div`\r\n  color: rgba(255, 255, 255, 0.8);\r\n  font-size: 0.9rem;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst LoadingCard = styled.div`\r\n  background: rgba(255, 255, 255, 0.1);\r\n  border-radius: 15px;\r\n  padding: 25px;\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n  text-align: center;\r\n  color: white;\r\n`;\r\n\r\nconst RefreshButton = styled.button`\r\n  background: rgba(255, 255, 255, 0.2);\r\n  border: none;\r\n  border-radius: 10px;\r\n  padding: 12px 24px;\r\n  color: white;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  margin-bottom: 20px;\r\n\r\n  &:hover {\r\n    background: rgba(255, 255, 255, 0.3);\r\n    transform: translateY(-2px);\r\n  }\r\n`;\r\n\r\n// 숫자 포맷팅 함수\r\nconst formatNumber = (value, decimals = 2) => {\r\n  if (value === null || value === undefined || isNaN(value)) {\r\n    return 'N/A';\r\n  }\r\n  \r\n  // 소수점 둘째자리까지 반올림\r\n  const roundedValue = Math.round(value * Math.pow(10, decimals)) / Math.pow(10, decimals);\r\n  \r\n  // 천 단위 콤마와 소수점 표시\r\n  return roundedValue.toLocaleString('ko-KR', {\r\n    minimumFractionDigits: decimals,\r\n    maximumFractionDigits: decimals\r\n  });\r\n};\r\n\r\n// 통화별 포맷팅 함수\r\nconst formatCurrency = (value, currency = 'USD', decimals = 2) => {\r\n  if (value === null || value === undefined || isNaN(value)) {\r\n    return 'N/A';\r\n  }\r\n  \r\n  const symbol = currency === 'USD' ? '$' : currency === 'KRW' ? '₩' : '';\r\n  const formattedValue = formatNumber(value, decimals);\r\n  \r\n  return `${symbol}${formattedValue}`;\r\n};\r\n\r\n// 퍼센트 포맷팅 함수\r\nconst formatPercent = (value, decimals = 2) => {\r\n  if (value === null || value === undefined || isNaN(value)) {\r\n    return 'N/A';\r\n  }\r\n  \r\n  const sign = value >= 0 ? '+' : '';\r\n  const formattedValue = formatNumber(Math.abs(value), decimals);\r\n  \r\n  return `${sign}${formattedValue}%`;\r\n};\r\n\r\nconst StockPage = () => {\r\n  const [stockData, setStockData] = useState([]);\r\n  const [chartData, setChartData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [chartLoading, setChartLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [selectedStock, setSelectedStock] = useState('^GSPC'); // S&P 500 기본 선택\r\n  const [timeRange, setTimeRange] = useState('1mo');\r\n\r\n  // 주식 데이터 가져오기\r\n  const fetchStockData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const data = await fetchMultipleStockQuotes(POPULAR_STOCKS);\r\n      setStockData(data);\r\n    } catch (err) {\r\n      setError('주식 데이터를 불러올 수 없습니다.');\r\n      console.error('Error fetching stock data:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 차트 데이터 가져오기\r\n  const fetchChartData = async (symbol, range) => {\r\n    try {\r\n      setChartLoading(true);\r\n      setError(null);\r\n      const data = await fetchStockChartData(symbol, range);\r\n      setChartData(data);\r\n    } catch (err) {\r\n      setError('차트 데이터를 불러올 수 없습니다.');\r\n      console.error('Error fetching chart data:', err);\r\n    } finally {\r\n      setChartLoading(false);\r\n    }\r\n  };\r\n\r\n  // 컴포넌트 마운트 시 데이터 로드\r\n  useEffect(() => {\r\n    fetchStockData();\r\n  }, []);\r\n\r\n  // 선택된 주식이나 시간 범위 변경 시 차트 데이터 로드\r\n  useEffect(() => {\r\n    if (selectedStock) {\r\n      fetchChartData(selectedStock, timeRange);\r\n    }\r\n  }, [selectedStock, timeRange]);\r\n\r\n  // 주식 선택 핸들러\r\n  const handleStockSelect = (symbol) => {\r\n    setSelectedStock(symbol);\r\n  };\r\n\r\n  // 시간 범위 변경 핸들러\r\n  const handleTimeRangeChange = (range) => {\r\n    setTimeRange(range);\r\n  };\r\n\r\n  // 주식 이름 매핑\r\n  const getStockDisplayName = (symbol) => {\r\n    const names = {\r\n      '^GSPC': 'S&P 500',\r\n      '^IXIC': 'NASDAQ',\r\n      '^DJI': 'DOW JONES',\r\n      '^VIX': 'VIX',\r\n      '^KS11': 'KOSPI',\r\n      '^KQ11': 'KOSDAQ'\r\n    };\r\n    return names[symbol] || symbol;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <PageLayout title=\"Stock Market\">\r\n        <LoadingCard>주식 데이터를 불러오는 중...</LoadingCard>\r\n      </PageLayout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <PageLayout title=\"Stock Market\">\r\n      <RefreshButton onClick={fetchStockData}>\r\n        🔄 데이터 새로고침\r\n      </RefreshButton>\r\n\r\n      <MetricsGrid>\r\n        {stockData.map((stock, index) => (\r\n          <MetricCard \r\n            key={stock.symbol} \r\n            onClick={() => handleStockSelect(stock.symbol)}\r\n            style={{ \r\n              cursor: 'pointer',\r\n              border: selectedStock === stock.symbol ? '2px solid #4ade80' : undefined\r\n            }}\r\n          >\r\n            <MetricTitle>{getStockDisplayName(stock.symbol)}</MetricTitle>\r\n            {stock.error ? (\r\n              <div style={{ color: '#f87171' }}>데이터 오류</div>\r\n            ) : (\r\n              <>\r\n                <MetricValue>\r\n                  {formatCurrency(stock.price, stock.currency)}\r\n                </MetricValue>\r\n                <MetricChange isPositive={stock.changePercent >= 0}>\r\n                  {formatPercent(stock.changePercent)}\r\n                </MetricChange>\r\n                \r\n                <ReturnsContainer>\r\n                  <ReturnItem>\r\n                    <ReturnLabel>3개월</ReturnLabel>\r\n                    <ReturnValue isPositive={stock.threeMonthReturn >= 0}>\r\n                      {formatPercent(stock.threeMonthReturn)}\r\n                    </ReturnValue>\r\n                  </ReturnItem>\r\n                  <ReturnItem>\r\n                    <ReturnLabel>YTD</ReturnLabel>\r\n                    <ReturnValue isPositive={stock.ytdReturn >= 0}>\r\n                      {formatPercent(stock.ytdReturn)}\r\n                    </ReturnValue>\r\n                  </ReturnItem>\r\n                </ReturnsContainer>\r\n                \r\n                <MetricDetails>\r\n                  전일: {formatCurrency(stock.previousClose, stock.currency)} | \r\n                  거래량: {formatNumber(stock.volume, 0)}\r\n                </MetricDetails>\r\n              </>\r\n            )}\r\n          </MetricCard>\r\n        ))}\r\n      </MetricsGrid>\r\n\r\n      {selectedStock && (\r\n        <StockChart\r\n          symbol={getStockDisplayName(selectedStock)}\r\n          data={chartData}\r\n          loading={chartLoading}\r\n          error={error}\r\n          timeRange={timeRange}\r\n          onTimeRangeChange={handleTimeRangeChange}\r\n        />\r\n      )}\r\n    </PageLayout>\r\n  );\r\n};\r\n\r\nexport default StockPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}