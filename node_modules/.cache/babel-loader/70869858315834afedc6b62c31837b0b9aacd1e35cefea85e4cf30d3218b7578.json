{"ast":null,"code":"// Yahoo FinanceÏóêÏÑú ÏÉÅÌíà Îç∞Ïù¥ÌÑ∞Î•º Í∞ÄÏ†∏Ïò§Îäî Commodities ÏÑúÎπÑÏä§\nconst BASE_URL = 'https://query1.finance.yahoo.com/v8/finance/chart';\n\n// Commodities Ïã¨Î≥º Îß§Ìïë (Yahoo Finance Ïã¨Î≥º)\nconst COMMODITIES_SYMBOLS = {\n  'Gold': 'GC=F',\n  'Silver': 'SI=F',\n  'Brent Crude': 'BZ=F',\n  'WTI': 'CL=F',\n  'Copper': 'HG=F',\n  'Natural Gas': 'NG=F',\n  'Soybean': 'ZS=F',\n  'Wheat': 'ZW=F',\n  'Corn': 'ZC=F'\n};\n\n// Yahoo Finance URL Îß§Ìïë\nexport const YAHOO_FINANCE_URLS = {\n  'Gold': 'https://finance.yahoo.com/quote/GC=F',\n  'Silver': 'https://finance.yahoo.com/quote/SI=F',\n  'Brent Crude': 'https://finance.yahoo.com/quote/BZ=F',\n  'WTI': 'https://finance.yahoo.com/quote/CL=F',\n  'Copper': 'https://finance.yahoo.com/quote/HG=F',\n  'Natural Gas': 'https://finance.yahoo.com/quote/NG=F',\n  'Soybean': 'https://finance.yahoo.com/quote/ZS=F',\n  'Wheat': 'https://finance.yahoo.com/quote/ZW=F',\n  'Corn': 'https://finance.yahoo.com/quote/ZC=F'\n};\n\n// ÌîÑÎ°ùÏãú ÏÑúÎ≤ÑÎì§ÏùÑ ÏÇ¨Ïö©Ìïú Ïõπ Ïä§ÌÅ¨ÎûòÌïë\nconst PROXY_SERVICES = ['https://api.allorigins.win/raw?url=', 'https://corsproxy.io/?', 'https://thingproxy.freeboard.io/fetch/', 'https://cors.bridged.cc/', 'https://api.codetabs.com/v1/proxy?quest=', 'https://cors.eu.org/', 'https://cors-anywhere.herokuapp.com/', '' // ÏßÅÏ†ë Ìò∏Ï∂úÎèÑ ÏãúÎèÑ\n];\n\n// ÌîÑÎ°ùÏãúÎ•º ÏÇ¨Ïö©Ìïú Ïõπ Ïä§ÌÅ¨ÎûòÌïë\nconst fetchWithProxy = async (url, proxyIndex = 0) => {\n  if (proxyIndex >= PROXY_SERVICES.length) {\n    throw new Error('All proxy attempts failed');\n  }\n  try {\n    const proxyUrl = PROXY_SERVICES[proxyIndex] + url;\n    console.log(`üîó Trying proxy ${proxyIndex + 1}/${PROXY_SERVICES.length}: ${proxyUrl.substring(0, 50)}...`);\n    const response = await fetch(proxyUrl, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json,text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',\n        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36',\n        'Accept-Language': 'en-US,en;q=0.9',\n        'Accept-Encoding': 'gzip, deflate, br',\n        'Connection': 'keep-alive',\n        'Upgrade-Insecure-Requests': '1'\n      },\n      timeout: 10000 // 10Ï¥à ÌÉÄÏûÑÏïÑÏõÉ\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.text();\n    if (data.length < 100) {\n      throw new Error('Response too short, likely an error page');\n    }\n    console.log(`‚úÖ Proxy ${proxyIndex + 1} successful! Data length: ${data.length} characters`);\n    return data;\n  } catch (error) {\n    console.log(`‚ùå Proxy ${proxyIndex + 1} failed: ${error.message}`);\n    return fetchWithProxy(url, proxyIndex + 1);\n  }\n};\n\n// 2024ÎÖÑ 12Ïõî Í∏∞Ï§Ä ÏµúÏã† ÎçîÎØ∏ Îç∞Ïù¥ÌÑ∞ (Ïã§Ï†ú ÏãúÏû• ÏÉÅÌô© Î∞òÏòÅ)\nconst DUMMY_COMMODITIES_DATA = [\n// Precious Metals (Í∑ÄÍ∏àÏÜç)\n{\n  title: 'Gold',\n  value: 2075.50,\n  change: 12.30,\n  isPositive: true,\n  symbol: 'GC=F'\n}, {\n  title: 'Silver',\n  value: 24.85,\n  change: -0.15,\n  isPositive: false,\n  symbol: 'SI=F'\n},\n// Energy (ÏóêÎÑàÏßÄ)\n{\n  title: 'Brent Crude',\n  value: 82.45,\n  change: 1.25,\n  isPositive: true,\n  symbol: 'BZ=F'\n}, {\n  title: 'WTI',\n  value: 78.90,\n  change: 1.10,\n  isPositive: true,\n  symbol: 'CL=F'\n}, {\n  title: 'Natural Gas',\n  value: 2.85,\n  change: -0.08,\n  isPositive: false,\n  symbol: 'NG=F'\n},\n// Industrial Metals (ÏÇ∞ÏóÖÏö© Í∏àÏÜç)\n{\n  title: 'Copper',\n  value: 3.95,\n  change: 0.05,\n  isPositive: true,\n  symbol: 'HG=F'\n},\n// Agriculture (ÎÜçÏÇ∞Î¨º)\n{\n  title: 'Soybean',\n  value: 1250.75,\n  change: -5.25,\n  isPositive: false,\n  symbol: 'ZS=F'\n}, {\n  title: 'Wheat',\n  value: 580.50,\n  change: 8.75,\n  isPositive: true,\n  symbol: 'ZW=F'\n}, {\n  title: 'Corn',\n  value: 485.25,\n  change: -2.50,\n  isPositive: false,\n  symbol: 'ZC=F'\n}];\n\n// Ïã§ÏãúÍ∞Ñ Îç∞Ïù¥ÌÑ∞ ÏãúÎÆ¨Î†àÏù¥ÏÖò (ÎçîÎØ∏ Îç∞Ïù¥ÌÑ∞Ïóê ÏïΩÍ∞ÑÏùò Î≥ÄÎèô Ï∂îÍ∞Ä)\nconst generateRealTimeData = () => {\n  return DUMMY_COMMODITIES_DATA.map(item => {\n    // ÏïΩÍ∞ÑÏùò ÎûúÎç§ Î≥ÄÎèô Ï∂îÍ∞Ä (¬±2% Î≤îÏúÑ)\n    const variation = (Math.random() - 0.5) * 0.04;\n    const newValue = item.value * (1 + variation);\n    const newChange = newValue - item.value;\n    return {\n      ...item,\n      value: Math.round(newValue * 100) / 100,\n      change: Math.round(newChange * 100) / 100,\n      isPositive: newChange >= 0\n    };\n  });\n};\n\n// Í∞úÎ≥Ñ ÏÉÅÌíà Îç∞Ïù¥ÌÑ∞ Í∞ÄÏ†∏Ïò§Í∏∞\nexport const fetchCommodityQuote = async title => {\n  try {\n    console.log(`üîÑ Fetching ${title} from Yahoo Finance...`);\n    const symbol = COMMODITIES_SYMBOLS[title];\n    if (!symbol) {\n      throw new Error(`Unknown symbol: ${title}`);\n    }\n    const url = `${BASE_URL}/${symbol}?interval=1d&range=1d`;\n    console.log(`üîó URL: ${url}`);\n    const data = await fetchWithProxy(url);\n    if (!data) {\n      throw new Error('Failed to fetch data');\n    }\n\n    // JSON ÌååÏã± ÏãúÎèÑ\n    let jsonData;\n    try {\n      jsonData = JSON.parse(data);\n    } catch (error) {\n      console.log('‚ùå Failed to parse JSON, using dummy data');\n      throw new Error('Invalid JSON response');\n    }\n\n    // Yahoo Finance API ÏùëÎãµ Íµ¨Ï°∞ÏóêÏÑú Îç∞Ïù¥ÌÑ∞ Ï∂îÏ∂ú\n    if (jsonData.chart && jsonData.chart.result && jsonData.chart.result[0]) {\n      const result = jsonData.chart.result[0];\n      const meta = result.meta;\n      const indicators = result.indicators;\n      if (meta && indicators && indicators.quote && indicators.quote[0]) {\n        const quote = indicators.quote[0];\n        const currentPrice = meta.regularMarketPrice;\n        const previousClose = meta.previousClose;\n        const change = currentPrice - previousClose;\n        console.log(`‚úÖ Successfully fetched ${title}: $${currentPrice} (${change >= 0 ? '+' : ''}${change.toFixed(2)})`);\n        return {\n          title: title,\n          value: currentPrice,\n          change: Math.round(change * 100) / 100,\n          isPositive: change >= 0,\n          symbol: symbol,\n          isRealData: true,\n          dataSource: 'Yahoo Finance'\n        };\n      }\n    }\n    throw new Error(`No valid data found for ${title}`);\n  } catch (error) {\n    console.error(`‚ùå Error fetching ${title}:`, error.message);\n\n    // Ïã§Ìå® Ïãú ÎçîÎØ∏ Îç∞Ïù¥ÌÑ∞ ÏÇ¨Ïö©\n    const dummyData = DUMMY_COMMODITIES_DATA.find(item => item.title === title);\n    if (dummyData) {\n      console.log(`üìä Using dummy data for ${title}`);\n      return {\n        ...dummyData,\n        isRealData: false,\n        dataSource: 'Dummy Data (Error)',\n        symbol: COMMODITIES_SYMBOLS[title] || ''\n      };\n    }\n    throw error;\n  }\n};\n\n// Î™®Îì† Commodities Îç∞Ïù¥ÌÑ∞ Í∞ÄÏ†∏Ïò§Í∏∞\nexport const fetchAllCommoditiesData = async () => {\n  try {\n    console.log('üîÑ Fetching all Commodities data from Yahoo Finance...');\n    const promises = [];\n\n    // Î™®Îì† Commodities Ïã¨Î≥ºÏóê ÎåÄÌï¥ Î≥ëÎ†¨Î°ú Îç∞Ïù¥ÌÑ∞ Í∞ÄÏ†∏Ïò§Í∏∞\n    for (const [title, symbol] of Object.entries(COMMODITIES_SYMBOLS)) {\n      promises.push(fetchCommodityQuote(title).then(data => {\n        console.log(`‚úÖ ${title}: $${data.value} (${data.isRealData ? 'Real' : 'Dummy'})`);\n        return data;\n      }).catch(error => {\n        console.log(`‚ùå Error fetching ${title}:`, error.message);\n        // Í∞úÎ≥Ñ Ïã§Ìå® Ïãú ÎçîÎØ∏ Îç∞Ïù¥ÌÑ∞ ÏÇ¨Ïö©\n        const dummyData = DUMMY_COMMODITIES_DATA.find(item => item.title === title);\n        if (dummyData) {\n          console.log(`üìä Using dummy data for ${title}`);\n          return {\n            ...dummyData,\n            isRealData: false,\n            dataSource: 'Dummy Data (Error)',\n            symbol: symbol\n          };\n        }\n        return null;\n      }));\n    }\n\n    // Î™®Îì† ÏöîÏ≤≠ ÏôÑÎ£å ÎåÄÍ∏∞\n    const results = await Promise.all(promises);\n\n    // null Í∞í ÌïÑÌÑ∞ÎßÅ\n    const validData = results.filter(data => data !== null);\n    console.log(`‚úÖ Successfully loaded ${validData.length}/${Object.keys(COMMODITIES_SYMBOLS).length} Commodities`);\n\n    // Ïã§Ï†ú Îç∞Ïù¥ÌÑ∞Í∞Ä ÏûàÎäîÏßÄ ÌôïÏù∏\n    const realDataCount = validData.filter(item => item.isRealData).length;\n    if (realDataCount === 0) {\n      console.log('‚ö†Ô∏è No real data available, showing dummy data');\n    } else {\n      console.log(`‚úÖ ${realDataCount} real Commodities loaded`);\n    }\n    return validData;\n  } catch (error) {\n    console.error('‚ùå Error fetching all Commodities data:', error);\n    console.log('üìä Falling back to dummy data...');\n\n    // Ï†ÑÏ≤¥ Ïã§Ìå® Ïãú ÎçîÎØ∏ Îç∞Ïù¥ÌÑ∞ Î∞òÌôò\n    return DUMMY_COMMODITIES_DATA.map(item => ({\n      ...item,\n      isRealData: false,\n      dataSource: 'Dummy Data (Error)',\n      symbol: COMMODITIES_SYMBOLS[item.title] || ''\n    }));\n  }\n};\n\n// ÏÉÅÌíà Îç∞Ïù¥ÌÑ∞ Í∞ÄÏ†∏Ïò§Í∏∞ (Ïã§ÏãúÍ∞Ñ ÏãúÎÆ¨Î†àÏù¥ÏÖò)\nexport const fetchCommodities = async () => {\n  try {\n    // Ïã§Ï†ú API Ìò∏Ï∂ú ÎåÄÏã† Ïã§ÏãúÍ∞Ñ ÏãúÎÆ¨Î†àÏù¥ÏÖò ÏÇ¨Ïö©\n    const realTimeData = generateRealTimeData();\n    return realTimeData;\n  } catch (error) {\n    console.error('Error fetching commodities:', error);\n    return DUMMY_COMMODITIES_DATA;\n  }\n};","map":{"version":3,"names":["BASE_URL","COMMODITIES_SYMBOLS","YAHOO_FINANCE_URLS","PROXY_SERVICES","fetchWithProxy","url","proxyIndex","length","Error","proxyUrl","console","log","substring","response","fetch","method","headers","timeout","ok","status","data","text","error","message","DUMMY_COMMODITIES_DATA","title","value","change","isPositive","symbol","generateRealTimeData","map","item","variation","Math","random","newValue","newChange","round","fetchCommodityQuote","jsonData","JSON","parse","chart","result","meta","indicators","quote","currentPrice","regularMarketPrice","previousClose","toFixed","isRealData","dataSource","dummyData","find","fetchAllCommoditiesData","promises","Object","entries","push","then","catch","results","Promise","all","validData","filter","keys","realDataCount","fetchCommodities","realTimeData"],"sources":["C:/Users/ÌôçÏÑ±Í¥Ä/Desktop/FBoard/src/services/commoditiesApi.js"],"sourcesContent":["// Yahoo FinanceÏóêÏÑú ÏÉÅÌíà Îç∞Ïù¥ÌÑ∞Î•º Í∞ÄÏ†∏Ïò§Îäî Commodities ÏÑúÎπÑÏä§\r\nconst BASE_URL = 'https://query1.finance.yahoo.com/v8/finance/chart';\r\n\r\n// Commodities Ïã¨Î≥º Îß§Ìïë (Yahoo Finance Ïã¨Î≥º)\r\nconst COMMODITIES_SYMBOLS = {\r\n  'Gold': 'GC=F',\r\n  'Silver': 'SI=F',\r\n  'Brent Crude': 'BZ=F',\r\n  'WTI': 'CL=F',\r\n  'Copper': 'HG=F',\r\n  'Natural Gas': 'NG=F',\r\n  'Soybean': 'ZS=F',\r\n  'Wheat': 'ZW=F',\r\n  'Corn': 'ZC=F'\r\n};\r\n\r\n// Yahoo Finance URL Îß§Ìïë\r\nexport const YAHOO_FINANCE_URLS = {\r\n  'Gold': 'https://finance.yahoo.com/quote/GC=F',\r\n  'Silver': 'https://finance.yahoo.com/quote/SI=F',\r\n  'Brent Crude': 'https://finance.yahoo.com/quote/BZ=F',\r\n  'WTI': 'https://finance.yahoo.com/quote/CL=F',\r\n  'Copper': 'https://finance.yahoo.com/quote/HG=F',\r\n  'Natural Gas': 'https://finance.yahoo.com/quote/NG=F',\r\n  'Soybean': 'https://finance.yahoo.com/quote/ZS=F',\r\n  'Wheat': 'https://finance.yahoo.com/quote/ZW=F',\r\n  'Corn': 'https://finance.yahoo.com/quote/ZC=F'\r\n};\r\n\r\n// ÌîÑÎ°ùÏãú ÏÑúÎ≤ÑÎì§ÏùÑ ÏÇ¨Ïö©Ìïú Ïõπ Ïä§ÌÅ¨ÎûòÌïë\r\nconst PROXY_SERVICES = [\r\n  'https://api.allorigins.win/raw?url=',\r\n  'https://corsproxy.io/?',\r\n  'https://thingproxy.freeboard.io/fetch/',\r\n  'https://cors.bridged.cc/',\r\n  'https://api.codetabs.com/v1/proxy?quest=',\r\n  'https://cors.eu.org/',\r\n  'https://cors-anywhere.herokuapp.com/',\r\n  '' // ÏßÅÏ†ë Ìò∏Ï∂úÎèÑ ÏãúÎèÑ\r\n];\r\n\r\n// ÌîÑÎ°ùÏãúÎ•º ÏÇ¨Ïö©Ìïú Ïõπ Ïä§ÌÅ¨ÎûòÌïë\r\nconst fetchWithProxy = async (url, proxyIndex = 0) => {\r\n  if (proxyIndex >= PROXY_SERVICES.length) {\r\n    throw new Error('All proxy attempts failed');\r\n  }\r\n\r\n  try {\r\n    const proxyUrl = PROXY_SERVICES[proxyIndex] + url;\r\n    console.log(`üîó Trying proxy ${proxyIndex + 1}/${PROXY_SERVICES.length}: ${proxyUrl.substring(0, 50)}...`);\r\n    \r\n    const response = await fetch(proxyUrl, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json,text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',\r\n        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36',\r\n        'Accept-Language': 'en-US,en;q=0.9',\r\n        'Accept-Encoding': 'gzip, deflate, br',\r\n        'Connection': 'keep-alive',\r\n        'Upgrade-Insecure-Requests': '1'\r\n      },\r\n      timeout: 10000 // 10Ï¥à ÌÉÄÏûÑÏïÑÏõÉ\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    const data = await response.text();\r\n    \r\n    if (data.length < 100) {\r\n      throw new Error('Response too short, likely an error page');\r\n    }\r\n    \r\n    console.log(`‚úÖ Proxy ${proxyIndex + 1} successful! Data length: ${data.length} characters`);\r\n    return data;\r\n  } catch (error) {\r\n    console.log(`‚ùå Proxy ${proxyIndex + 1} failed: ${error.message}`);\r\n    return fetchWithProxy(url, proxyIndex + 1);\r\n  }\r\n};\r\n\r\n// 2024ÎÖÑ 12Ïõî Í∏∞Ï§Ä ÏµúÏã† ÎçîÎØ∏ Îç∞Ïù¥ÌÑ∞ (Ïã§Ï†ú ÏãúÏû• ÏÉÅÌô© Î∞òÏòÅ)\r\nconst DUMMY_COMMODITIES_DATA = [\r\n  // Precious Metals (Í∑ÄÍ∏àÏÜç)\r\n  { title: 'Gold', value: 2075.50, change: 12.30, isPositive: true, symbol: 'GC=F' },\r\n  { title: 'Silver', value: 24.85, change: -0.15, isPositive: false, symbol: 'SI=F' },\r\n  \r\n  // Energy (ÏóêÎÑàÏßÄ)\r\n  { title: 'Brent Crude', value: 82.45, change: 1.25, isPositive: true, symbol: 'BZ=F' },\r\n  { title: 'WTI', value: 78.90, change: 1.10, isPositive: true, symbol: 'CL=F' },\r\n  { title: 'Natural Gas', value: 2.85, change: -0.08, isPositive: false, symbol: 'NG=F' },\r\n  \r\n  // Industrial Metals (ÏÇ∞ÏóÖÏö© Í∏àÏÜç)\r\n  { title: 'Copper', value: 3.95, change: 0.05, isPositive: true, symbol: 'HG=F' },\r\n  \r\n  // Agriculture (ÎÜçÏÇ∞Î¨º)\r\n  { title: 'Soybean', value: 1250.75, change: -5.25, isPositive: false, symbol: 'ZS=F' },\r\n  { title: 'Wheat', value: 580.50, change: 8.75, isPositive: true, symbol: 'ZW=F' },\r\n  { title: 'Corn', value: 485.25, change: -2.50, isPositive: false, symbol: 'ZC=F' }\r\n];\r\n\r\n// Ïã§ÏãúÍ∞Ñ Îç∞Ïù¥ÌÑ∞ ÏãúÎÆ¨Î†àÏù¥ÏÖò (ÎçîÎØ∏ Îç∞Ïù¥ÌÑ∞Ïóê ÏïΩÍ∞ÑÏùò Î≥ÄÎèô Ï∂îÍ∞Ä)\r\nconst generateRealTimeData = () => {\r\n  return DUMMY_COMMODITIES_DATA.map(item => {\r\n    // ÏïΩÍ∞ÑÏùò ÎûúÎç§ Î≥ÄÎèô Ï∂îÍ∞Ä (¬±2% Î≤îÏúÑ)\r\n    const variation = (Math.random() - 0.5) * 0.04;\r\n    const newValue = item.value * (1 + variation);\r\n    const newChange = newValue - item.value;\r\n    \r\n    return {\r\n      ...item,\r\n      value: Math.round(newValue * 100) / 100,\r\n      change: Math.round(newChange * 100) / 100,\r\n      isPositive: newChange >= 0\r\n    };\r\n  });\r\n};\r\n\r\n// Í∞úÎ≥Ñ ÏÉÅÌíà Îç∞Ïù¥ÌÑ∞ Í∞ÄÏ†∏Ïò§Í∏∞\r\nexport const fetchCommodityQuote = async (title) => {\r\n  try {\r\n    console.log(`üîÑ Fetching ${title} from Yahoo Finance...`);\r\n    \r\n    const symbol = COMMODITIES_SYMBOLS[title];\r\n    if (!symbol) {\r\n      throw new Error(`Unknown symbol: ${title}`);\r\n    }\r\n    \r\n    const url = `${BASE_URL}/${symbol}?interval=1d&range=1d`;\r\n    console.log(`üîó URL: ${url}`);\r\n    \r\n    const data = await fetchWithProxy(url);\r\n    \r\n    if (!data) {\r\n      throw new Error('Failed to fetch data');\r\n    }\r\n    \r\n    // JSON ÌååÏã± ÏãúÎèÑ\r\n    let jsonData;\r\n    try {\r\n      jsonData = JSON.parse(data);\r\n    } catch (error) {\r\n      console.log('‚ùå Failed to parse JSON, using dummy data');\r\n      throw new Error('Invalid JSON response');\r\n    }\r\n    \r\n    // Yahoo Finance API ÏùëÎãµ Íµ¨Ï°∞ÏóêÏÑú Îç∞Ïù¥ÌÑ∞ Ï∂îÏ∂ú\r\n    if (jsonData.chart && jsonData.chart.result && jsonData.chart.result[0]) {\r\n      const result = jsonData.chart.result[0];\r\n      const meta = result.meta;\r\n      const indicators = result.indicators;\r\n      \r\n      if (meta && indicators && indicators.quote && indicators.quote[0]) {\r\n        const quote = indicators.quote[0];\r\n        const currentPrice = meta.regularMarketPrice;\r\n        const previousClose = meta.previousClose;\r\n        const change = currentPrice - previousClose;\r\n        \r\n        console.log(`‚úÖ Successfully fetched ${title}: $${currentPrice} (${change >= 0 ? '+' : ''}${change.toFixed(2)})`);\r\n        return {\r\n          title: title,\r\n          value: currentPrice,\r\n          change: Math.round(change * 100) / 100,\r\n          isPositive: change >= 0,\r\n          symbol: symbol,\r\n          isRealData: true,\r\n          dataSource: 'Yahoo Finance'\r\n        };\r\n      }\r\n    }\r\n    \r\n    throw new Error(`No valid data found for ${title}`);\r\n    \r\n  } catch (error) {\r\n    console.error(`‚ùå Error fetching ${title}:`, error.message);\r\n    \r\n    // Ïã§Ìå® Ïãú ÎçîÎØ∏ Îç∞Ïù¥ÌÑ∞ ÏÇ¨Ïö©\r\n    const dummyData = DUMMY_COMMODITIES_DATA.find(item => item.title === title);\r\n    if (dummyData) {\r\n      console.log(`üìä Using dummy data for ${title}`);\r\n      return {\r\n        ...dummyData,\r\n        isRealData: false,\r\n        dataSource: 'Dummy Data (Error)',\r\n        symbol: COMMODITIES_SYMBOLS[title] || ''\r\n      };\r\n    }\r\n    \r\n    throw error;\r\n  }\r\n};\r\n\r\n// Î™®Îì† Commodities Îç∞Ïù¥ÌÑ∞ Í∞ÄÏ†∏Ïò§Í∏∞\r\nexport const fetchAllCommoditiesData = async () => {\r\n  try {\r\n    console.log('üîÑ Fetching all Commodities data from Yahoo Finance...');\r\n    \r\n    const promises = [];\r\n    \r\n    // Î™®Îì† Commodities Ïã¨Î≥ºÏóê ÎåÄÌï¥ Î≥ëÎ†¨Î°ú Îç∞Ïù¥ÌÑ∞ Í∞ÄÏ†∏Ïò§Í∏∞\r\n    for (const [title, symbol] of Object.entries(COMMODITIES_SYMBOLS)) {\r\n      promises.push(\r\n        fetchCommodityQuote(title)\r\n          .then(data => {\r\n            console.log(`‚úÖ ${title}: $${data.value} (${data.isRealData ? 'Real' : 'Dummy'})`);\r\n            return data;\r\n          })\r\n          .catch(error => {\r\n            console.log(`‚ùå Error fetching ${title}:`, error.message);\r\n            // Í∞úÎ≥Ñ Ïã§Ìå® Ïãú ÎçîÎØ∏ Îç∞Ïù¥ÌÑ∞ ÏÇ¨Ïö©\r\n            const dummyData = DUMMY_COMMODITIES_DATA.find(item => item.title === title);\r\n            if (dummyData) {\r\n              console.log(`üìä Using dummy data for ${title}`);\r\n              return {\r\n                ...dummyData,\r\n                isRealData: false,\r\n                dataSource: 'Dummy Data (Error)',\r\n                symbol: symbol\r\n              };\r\n            }\r\n            return null;\r\n          })\r\n      );\r\n    }\r\n    \r\n    // Î™®Îì† ÏöîÏ≤≠ ÏôÑÎ£å ÎåÄÍ∏∞\r\n    const results = await Promise.all(promises);\r\n    \r\n    // null Í∞í ÌïÑÌÑ∞ÎßÅ\r\n    const validData = results.filter(data => data !== null);\r\n    \r\n    console.log(`‚úÖ Successfully loaded ${validData.length}/${Object.keys(COMMODITIES_SYMBOLS).length} Commodities`);\r\n    \r\n    // Ïã§Ï†ú Îç∞Ïù¥ÌÑ∞Í∞Ä ÏûàÎäîÏßÄ ÌôïÏù∏\r\n    const realDataCount = validData.filter(item => item.isRealData).length;\r\n    if (realDataCount === 0) {\r\n      console.log('‚ö†Ô∏è No real data available, showing dummy data');\r\n    } else {\r\n      console.log(`‚úÖ ${realDataCount} real Commodities loaded`);\r\n    }\r\n    \r\n    return validData;\r\n    \r\n  } catch (error) {\r\n    console.error('‚ùå Error fetching all Commodities data:', error);\r\n    console.log('üìä Falling back to dummy data...');\r\n    \r\n    // Ï†ÑÏ≤¥ Ïã§Ìå® Ïãú ÎçîÎØ∏ Îç∞Ïù¥ÌÑ∞ Î∞òÌôò\r\n    return DUMMY_COMMODITIES_DATA.map(item => ({\r\n      ...item,\r\n      isRealData: false,\r\n      dataSource: 'Dummy Data (Error)',\r\n      symbol: COMMODITIES_SYMBOLS[item.title] || ''\r\n    }));\r\n  }\r\n};\r\n\r\n// ÏÉÅÌíà Îç∞Ïù¥ÌÑ∞ Í∞ÄÏ†∏Ïò§Í∏∞ (Ïã§ÏãúÍ∞Ñ ÏãúÎÆ¨Î†àÏù¥ÏÖò)\r\nexport const fetchCommodities = async () => {\r\n  try {\r\n    // Ïã§Ï†ú API Ìò∏Ï∂ú ÎåÄÏã† Ïã§ÏãúÍ∞Ñ ÏãúÎÆ¨Î†àÏù¥ÏÖò ÏÇ¨Ïö©\r\n    const realTimeData = generateRealTimeData();\r\n    return realTimeData;\r\n  } catch (error) {\r\n    console.error('Error fetching commodities:', error);\r\n    return DUMMY_COMMODITIES_DATA;\r\n  }\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}