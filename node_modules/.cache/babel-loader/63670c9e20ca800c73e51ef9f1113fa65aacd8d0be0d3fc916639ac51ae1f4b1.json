{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uD64D\\uC131\\uAD00\\\\Desktop\\\\FBoard\\\\src\\\\components\\\\FixedIncomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport PageLayout from './PageLayout';\nimport { fetchAllFixedIncomeData, TRADING_ECONOMICS_URLS, testWebScraping } from '../services/fixedIncomeApi';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MetricsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(175px, 1fr));\n  gap: 15px;\n  margin-bottom: 30px;\n`;\n_c = MetricsGrid;\nconst MetricCard = styled.div`\n  background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n  border-radius: 12px;\n  padding: 15px;\n  border: 1px solid #dee2e6;\n  transition: transform 0.3s ease;\n  cursor: pointer;\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\n  position: relative;\n\n  ${props => props.isRealData && `\n    border: 2px solid #1a5f3c;\n    background: linear-gradient(135deg, #e8f5e8 0%, #d4edda 100%);\n    &::before {\n      content: '🌐';\n      position: absolute;\n      top: 5px;\n      right: 5px;\n      font-size: 12px;\n    }\n  `}\n\n  &:hover {\n    transform: translateY(-3px);\n    background: linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%);\n    border-color: #1a5f3c;\n    box-shadow: 0 6px 20px rgba(26, 95, 60, 0.2);\n  }\n`;\n_c2 = MetricCard;\nconst MetricTitle = styled.h3`\n  color: #2c3e50;\n  font-size: 1rem;\n  margin-bottom: 10px;\n  font-weight: 600;\n  text-align: center;\n  \n  ${props => props.isRealData && `\n    color: #1a5f3c;\n    font-weight: 700;\n  `}\n`;\n_c3 = MetricTitle;\nconst MetricValue = styled.div`\n  color: #1a5f3c;\n  font-size: 1.3rem;\n  font-weight: 700;\n  margin-bottom: 8px;\n  text-align: center;\n`;\n_c4 = MetricValue;\nconst MetricChange = styled.div`\n  color: ${props => props.isPositive ? '#1a5f3c' : '#e74c3c'};\n  font-size: 0.9rem;\n  font-weight: 500;\n  text-align: center;\n`;\n_c5 = MetricChange;\nconst LoadingCard = styled.div`\n  background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n  border-radius: 15px;\n  padding: 25px;\n  border: 1px solid #dee2e6;\n  text-align: center;\n  color: #2c3e50;\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\n`;\n_c6 = LoadingCard;\nconst RefreshButton = styled.button`\n  background: linear-gradient(135deg, #1a5f3c 0%, #2d7a4f 100%);\n  border: none;\n  border-radius: 10px;\n  padding: 12px 24px;\n  color: white;\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  margin-bottom: 20px;\n  box-shadow: 0 4px 15px rgba(26, 95, 60, 0.3);\n\n  &:hover {\n    background: linear-gradient(135deg, #134a30 0%, #1a5f3c 100%);\n    transform: translateY(-2px);\n    box-shadow: 0 6px 20px rgba(26, 95, 60, 0.4);\n  }\n`;\n_c7 = RefreshButton;\nconst ClickHint = styled.div`\n  text-align: center;\n  color: #7f8c8d;\n  font-size: 0.9rem;\n  margin-top: 20px;\n  font-style: italic;\n`;\n_c8 = ClickHint;\nconst DataSourceIndicator = styled.div`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  font-size: 10px;\n  color: ${props => props.isRealData ? '#1a5f3c' : '#7f8c8d'};\n  font-weight: ${props => props.isRealData ? 'bold' : 'normal'};\n  background: ${props => props.isRealData ? 'rgba(26, 95, 60, 0.1)' : 'rgba(127, 140, 141, 0.1)'};\n  padding: 2px 6px;\n  border-radius: 4px;\n  border: 1px solid ${props => props.isRealData ? '#1a5f3c' : '#7f8c8d'};\n`;\n_c9 = DataSourceIndicator;\nconst DataSourceInfo = styled.div`\n  font-size: 9px;\n  color: #7f8c8d;\n  text-align: center;\n  margin-top: 5px;\n  font-style: italic;\n  \n  ${props => props.isRealData && `\n    color: #1a5f3c;\n    font-weight: 500;\n  `}\n`;\n_c0 = DataSourceInfo;\nconst TestButton = styled.button`\n  background: linear-gradient(135deg, #e74c3c 0%, #c0392b 100%);\n  border: none;\n  border-radius: 10px;\n  padding: 12px 24px;\n  color: white;\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  margin-bottom: 20px;\n  margin-left: 15px;\n  box-shadow: 0 4px 15px rgba(231, 76, 60, 0.3);\n\n  &:hover {\n    background: linear-gradient(135deg, #c0392b 0%, #a93226 100%);\n    transform: translateY(-2px);\n    box-shadow: 0 6px 20px rgba(231, 76, 60, 0.4);\n  }\n\n  &:disabled {\n    background: #bdc3c7;\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n_c1 = TestButton;\nconst TestResult = styled.div`\n  background: ${props => props.success ? 'linear-gradient(135deg, #d4edda 0%, #c3e6cb 100%)' : 'linear-gradient(135deg, #f8d7da 0%, #f5c6cb 100%)'};\n  border: 1px solid ${props => props.success ? '#1a5f3c' : '#e74c3c'};\n  border-radius: 10px;\n  padding: 15px;\n  margin-bottom: 20px;\n  text-align: center;\n  color: ${props => props.success ? '#1a5f3c' : '#e74c3c'};\n  font-weight: 600;\n`;\n_c10 = TestResult;\nconst ButtonContainer = styled.div`\n  display: flex;\n  gap: 15px;\n  margin-bottom: 20px;\n  flex-wrap: wrap;\n`;\n\n// 숫자 포맷팅 함수\n_c11 = ButtonContainer;\nconst formatNumber = (value, decimals = 2) => {\n  if (value === null || value === undefined || isNaN(value)) {\n    return 'N/A';\n  }\n  const roundedValue = Math.round(value * Math.pow(10, decimals)) / Math.pow(10, decimals);\n  return roundedValue.toLocaleString('ko-KR', {\n    minimumFractionDigits: decimals,\n    maximumFractionDigits: decimals\n  });\n};\n\n// 퍼센트 포맷팅 함수\nconst formatPercent = (value, decimals = 2) => {\n  if (value === null || value === undefined || isNaN(value)) {\n    return 'N/A';\n  }\n  const sign = value >= 0 ? '+' : '';\n  const formattedValue = formatNumber(Math.abs(value), decimals);\n  return `${sign}${formattedValue}%`;\n};\nconst FixedIncomePage = () => {\n  _s();\n  const [bondMetrics, setBondMetrics] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [testResult, setTestResult] = useState(null);\n  const [testing, setTesting] = useState(false);\n\n  // 웹 스크래핑 테스트 실행\n  const runWebScrapingTest = async () => {\n    try {\n      setTesting(true);\n      setTestResult(null);\n      console.log('🧪 Starting web scraping test...');\n      const result = await testWebScraping();\n      setTestResult(result ? '✅ 웹 스크래핑 테스트 성공!' : '❌ 웹 스크래핑 테스트 실패');\n      if (result) {\n        console.log('✅ Web scraping is working!');\n      } else {\n        console.log('❌ Web scraping is not working');\n      }\n    } catch (error) {\n      setTestResult('❌ 테스트 중 오류 발생');\n      console.error('❌ Test error:', error);\n    } finally {\n      setTesting(false);\n    }\n  };\n\n  // Fixed Income 데이터 가져오기 (실제 웹 스크래핑 포함)\n  const fetchFixedIncomeData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      console.log('🔄 Starting Fixed Income data fetch...');\n\n      // 기본 더미 데이터 가져오기\n      const data = await fetchAllFixedIncomeData();\n      console.log('📊 Dummy data loaded:', data.length, 'items');\n\n      // 한국 국채 수익률 실제 데이터 가져오기 시도\n      try {\n        console.log('🌐 Attempting to fetch Korea bond yield...');\n        const koreaBondData = await fetchKoreaBondYield();\n        if (koreaBondData && koreaBondData.rate) {\n          console.log(`✅ Korea bond yield fetched successfully! Rate: ${koreaBondData.rate}% (Source: ${koreaBondData.source})`);\n\n          // 한국 10Y 국채 수익률 업데이트\n          const updatedData = data.map(item => {\n            if (item.title === 'Korea 10Y') {\n              const oldValue = item.value;\n              const newValue = koreaBondData.rate;\n              const change = newValue - oldValue;\n              console.log(`📈 Updated Korea 10Y: ${oldValue}% → ${newValue}% (Change: ${change > 0 ? '+' : ''}${change}%)`);\n              return {\n                ...item,\n                value: newValue,\n                change: change,\n                isPositive: change >= 0,\n                isRealData: !koreaBondData.isEstimated,\n                // 추정치가 아니면 실제 데이터\n                dataSource: koreaBondData.source,\n                isEstimated: koreaBondData.isEstimated\n              };\n            }\n            return item;\n          });\n          setBondMetrics(updatedData);\n          console.log('✅ Data updated with fetched data');\n        } else {\n          console.log('❌ Failed to fetch Korea bond yield, using dummy data');\n          setBondMetrics(data);\n        }\n      } catch (scrapingError) {\n        console.log('❌ Error fetching Korea bond yield:', scrapingError);\n        console.log('📊 Falling back to dummy data');\n        setBondMetrics(data);\n      }\n    } catch (err) {\n      setError('Fixed Income 데이터를 불러올 수 없습니다.');\n      console.error('❌ Error fetching fixed income data:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 컴포넌트 마운트 시 데이터 로드\n  useEffect(() => {\n    fetchFixedIncomeData();\n  }, []);\n\n  // 채권 지표 클릭 핸들러 - Trading Economics 페이지 열기\n  const handleBondClick = title => {\n    const url = TRADING_ECONOMICS_URLS[title];\n    if (url) {\n      window.open(url, '_blank', 'noopener,noreferrer');\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(PageLayout, {\n      title: \"Fixed Income\",\n      children: /*#__PURE__*/_jsxDEV(LoadingCard, {\n        children: \"Fixed Income \\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(PageLayout, {\n    title: \"Fixed Income\",\n    children: [/*#__PURE__*/_jsxDEV(ButtonContainer, {\n      children: [/*#__PURE__*/_jsxDEV(RefreshButton, {\n        onClick: fetchFixedIncomeData,\n        children: \"\\uD83D\\uDD04 \\uB370\\uC774\\uD130 \\uC0C8\\uB85C\\uACE0\\uCE68\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TestButton, {\n        onClick: runWebScrapingTest,\n        disabled: testing,\n        children: testing ? '테스트 중...' : '웹 스크래핑 테스트'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this), testResult && /*#__PURE__*/_jsxDEV(TestResult, {\n      success: testResult.includes('✅'),\n      children: testResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MetricsGrid, {\n      children: bondMetrics.map((metric, index) => /*#__PURE__*/_jsxDEV(MetricCard, {\n        onClick: () => handleBondClick(metric.title),\n        isRealData: metric.isRealData,\n        children: [/*#__PURE__*/_jsxDEV(MetricTitle, {\n          isRealData: metric.isRealData,\n          children: metric.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }, this), metric.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: '#e74c3c',\n            textAlign: 'center'\n          },\n          children: \"\\uB370\\uC774\\uD130 \\uC624\\uB958\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(MetricValue, {\n            children: formatPercent(metric.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(MetricChange, {\n            isPositive: metric.isPositive,\n            children: formatPercent(metric.change)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(DataSourceIndicator, {\n            isRealData: metric.isRealData,\n            children: metric.isRealData ? '실제 데이터' : '더미 데이터'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(DataSourceInfo, {\n            isRealData: metric.isRealData,\n            children: [metric.dataSource ? `소스: ${metric.dataSource}` : '더미 데이터', metric.isEstimated && ' (추정치)']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ClickHint, {\n      children: \"\\uD83D\\uDCA1 \\uAC01 \\uC9C0\\uD45C\\uB97C \\uD074\\uB9AD\\uD558\\uBA74 Trading Economics\\uC5D0\\uC11C \\uC0C1\\uC138 \\uC815\\uBCF4\\uB97C \\uD655\\uC778\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 321,\n    columnNumber: 5\n  }, this);\n};\n_s(FixedIncomePage, \"ouNMYB+mEq+cVhv3/AQrnmBPrw8=\");\n_c12 = FixedIncomePage;\nexport default FixedIncomePage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12;\n$RefreshReg$(_c, \"MetricsGrid\");\n$RefreshReg$(_c2, \"MetricCard\");\n$RefreshReg$(_c3, \"MetricTitle\");\n$RefreshReg$(_c4, \"MetricValue\");\n$RefreshReg$(_c5, \"MetricChange\");\n$RefreshReg$(_c6, \"LoadingCard\");\n$RefreshReg$(_c7, \"RefreshButton\");\n$RefreshReg$(_c8, \"ClickHint\");\n$RefreshReg$(_c9, \"DataSourceIndicator\");\n$RefreshReg$(_c0, \"DataSourceInfo\");\n$RefreshReg$(_c1, \"TestButton\");\n$RefreshReg$(_c10, \"TestResult\");\n$RefreshReg$(_c11, \"ButtonContainer\");\n$RefreshReg$(_c12, \"FixedIncomePage\");","map":{"version":3,"names":["React","useState","useEffect","styled","PageLayout","fetchAllFixedIncomeData","TRADING_ECONOMICS_URLS","testWebScraping","jsxDEV","_jsxDEV","Fragment","_Fragment","MetricsGrid","div","_c","MetricCard","props","isRealData","_c2","MetricTitle","h3","_c3","MetricValue","_c4","MetricChange","isPositive","_c5","LoadingCard","_c6","RefreshButton","button","_c7","ClickHint","_c8","DataSourceIndicator","_c9","DataSourceInfo","_c0","TestButton","_c1","TestResult","success","_c10","ButtonContainer","_c11","formatNumber","value","decimals","undefined","isNaN","roundedValue","Math","round","pow","toLocaleString","minimumFractionDigits","maximumFractionDigits","formatPercent","sign","formattedValue","abs","FixedIncomePage","_s","bondMetrics","setBondMetrics","loading","setLoading","error","setError","testResult","setTestResult","testing","setTesting","runWebScrapingTest","console","log","result","fetchFixedIncomeData","data","length","koreaBondData","fetchKoreaBondYield","rate","source","updatedData","map","item","title","oldValue","newValue","change","isEstimated","dataSource","scrapingError","err","handleBondClick","url","window","open","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","includes","metric","index","style","color","textAlign","_c12","$RefreshReg$"],"sources":["C:/Users/홍성관/Desktop/FBoard/src/components/FixedIncomePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport PageLayout from './PageLayout';\r\nimport { fetchAllFixedIncomeData, TRADING_ECONOMICS_URLS, testWebScraping } from '../services/fixedIncomeApi';\r\n\r\nconst MetricsGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(175px, 1fr));\r\n  gap: 15px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst MetricCard = styled.div`\r\n  background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\r\n  border-radius: 12px;\r\n  padding: 15px;\r\n  border: 1px solid #dee2e6;\r\n  transition: transform 0.3s ease;\r\n  cursor: pointer;\r\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\r\n  position: relative;\r\n\r\n  ${props => props.isRealData && `\r\n    border: 2px solid #1a5f3c;\r\n    background: linear-gradient(135deg, #e8f5e8 0%, #d4edda 100%);\r\n    &::before {\r\n      content: '🌐';\r\n      position: absolute;\r\n      top: 5px;\r\n      right: 5px;\r\n      font-size: 12px;\r\n    }\r\n  `}\r\n\r\n  &:hover {\r\n    transform: translateY(-3px);\r\n    background: linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%);\r\n    border-color: #1a5f3c;\r\n    box-shadow: 0 6px 20px rgba(26, 95, 60, 0.2);\r\n  }\r\n`;\r\n\r\nconst MetricTitle = styled.h3`\r\n  color: #2c3e50;\r\n  font-size: 1rem;\r\n  margin-bottom: 10px;\r\n  font-weight: 600;\r\n  text-align: center;\r\n  \r\n  ${props => props.isRealData && `\r\n    color: #1a5f3c;\r\n    font-weight: 700;\r\n  `}\r\n`;\r\n\r\nconst MetricValue = styled.div`\r\n  color: #1a5f3c;\r\n  font-size: 1.3rem;\r\n  font-weight: 700;\r\n  margin-bottom: 8px;\r\n  text-align: center;\r\n`;\r\n\r\nconst MetricChange = styled.div`\r\n  color: ${props => props.isPositive ? '#1a5f3c' : '#e74c3c'};\r\n  font-size: 0.9rem;\r\n  font-weight: 500;\r\n  text-align: center;\r\n`;\r\n\r\nconst LoadingCard = styled.div`\r\n  background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\r\n  border-radius: 15px;\r\n  padding: 25px;\r\n  border: 1px solid #dee2e6;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst RefreshButton = styled.button`\r\n  background: linear-gradient(135deg, #1a5f3c 0%, #2d7a4f 100%);\r\n  border: none;\r\n  border-radius: 10px;\r\n  padding: 12px 24px;\r\n  color: white;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  margin-bottom: 20px;\r\n  box-shadow: 0 4px 15px rgba(26, 95, 60, 0.3);\r\n\r\n  &:hover {\r\n    background: linear-gradient(135deg, #134a30 0%, #1a5f3c 100%);\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 6px 20px rgba(26, 95, 60, 0.4);\r\n  }\r\n`;\r\n\r\nconst ClickHint = styled.div`\r\n  text-align: center;\r\n  color: #7f8c8d;\r\n  font-size: 0.9rem;\r\n  margin-top: 20px;\r\n  font-style: italic;\r\n`;\r\n\r\nconst DataSourceIndicator = styled.div`\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 5px;\r\n  font-size: 10px;\r\n  color: ${props => props.isRealData ? '#1a5f3c' : '#7f8c8d'};\r\n  font-weight: ${props => props.isRealData ? 'bold' : 'normal'};\r\n  background: ${props => props.isRealData ? 'rgba(26, 95, 60, 0.1)' : 'rgba(127, 140, 141, 0.1)'};\r\n  padding: 2px 6px;\r\n  border-radius: 4px;\r\n  border: 1px solid ${props => props.isRealData ? '#1a5f3c' : '#7f8c8d'};\r\n`;\r\n\r\nconst DataSourceInfo = styled.div`\r\n  font-size: 9px;\r\n  color: #7f8c8d;\r\n  text-align: center;\r\n  margin-top: 5px;\r\n  font-style: italic;\r\n  \r\n  ${props => props.isRealData && `\r\n    color: #1a5f3c;\r\n    font-weight: 500;\r\n  `}\r\n`;\r\n\r\nconst TestButton = styled.button`\r\n  background: linear-gradient(135deg, #e74c3c 0%, #c0392b 100%);\r\n  border: none;\r\n  border-radius: 10px;\r\n  padding: 12px 24px;\r\n  color: white;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  margin-bottom: 20px;\r\n  margin-left: 15px;\r\n  box-shadow: 0 4px 15px rgba(231, 76, 60, 0.3);\r\n\r\n  &:hover {\r\n    background: linear-gradient(135deg, #c0392b 0%, #a93226 100%);\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 6px 20px rgba(231, 76, 60, 0.4);\r\n  }\r\n\r\n  &:disabled {\r\n    background: #bdc3c7;\r\n    cursor: not-allowed;\r\n    transform: none;\r\n  }\r\n`;\r\n\r\nconst TestResult = styled.div`\r\n  background: ${props => props.success ? 'linear-gradient(135deg, #d4edda 0%, #c3e6cb 100%)' : 'linear-gradient(135deg, #f8d7da 0%, #f5c6cb 100%)'};\r\n  border: 1px solid ${props => props.success ? '#1a5f3c' : '#e74c3c'};\r\n  border-radius: 10px;\r\n  padding: 15px;\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n  color: ${props => props.success ? '#1a5f3c' : '#e74c3c'};\r\n  font-weight: 600;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  gap: 15px;\r\n  margin-bottom: 20px;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\n// 숫자 포맷팅 함수\r\nconst formatNumber = (value, decimals = 2) => {\r\n  if (value === null || value === undefined || isNaN(value)) {\r\n    return 'N/A';\r\n  }\r\n  \r\n  const roundedValue = Math.round(value * Math.pow(10, decimals)) / Math.pow(10, decimals);\r\n  \r\n  return roundedValue.toLocaleString('ko-KR', {\r\n    minimumFractionDigits: decimals,\r\n    maximumFractionDigits: decimals\r\n  });\r\n};\r\n\r\n// 퍼센트 포맷팅 함수\r\nconst formatPercent = (value, decimals = 2) => {\r\n  if (value === null || value === undefined || isNaN(value)) {\r\n    return 'N/A';\r\n  }\r\n  \r\n  const sign = value >= 0 ? '+' : '';\r\n  const formattedValue = formatNumber(Math.abs(value), decimals);\r\n  \r\n  return `${sign}${formattedValue}%`;\r\n};\r\n\r\nconst FixedIncomePage = () => {\r\n  const [bondMetrics, setBondMetrics] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [testResult, setTestResult] = useState(null);\r\n  const [testing, setTesting] = useState(false);\r\n\r\n  // 웹 스크래핑 테스트 실행\r\n  const runWebScrapingTest = async () => {\r\n    try {\r\n      setTesting(true);\r\n      setTestResult(null);\r\n      \r\n      console.log('🧪 Starting web scraping test...');\r\n      const result = await testWebScraping();\r\n      \r\n      setTestResult(result ? '✅ 웹 스크래핑 테스트 성공!' : '❌ 웹 스크래핑 테스트 실패');\r\n      \r\n      if (result) {\r\n        console.log('✅ Web scraping is working!');\r\n      } else {\r\n        console.log('❌ Web scraping is not working');\r\n      }\r\n    } catch (error) {\r\n      setTestResult('❌ 테스트 중 오류 발생');\r\n      console.error('❌ Test error:', error);\r\n    } finally {\r\n      setTesting(false);\r\n    }\r\n  };\r\n\r\n  // Fixed Income 데이터 가져오기 (실제 웹 스크래핑 포함)\r\n  const fetchFixedIncomeData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      console.log('🔄 Starting Fixed Income data fetch...');\r\n      \r\n      // 기본 더미 데이터 가져오기\r\n      const data = await fetchAllFixedIncomeData();\r\n      console.log('📊 Dummy data loaded:', data.length, 'items');\r\n      \r\n      // 한국 국채 수익률 실제 데이터 가져오기 시도\r\n      try {\r\n        console.log('🌐 Attempting to fetch Korea bond yield...');\r\n        const koreaBondData = await fetchKoreaBondYield();\r\n        \r\n        if (koreaBondData && koreaBondData.rate) {\r\n          console.log(`✅ Korea bond yield fetched successfully! Rate: ${koreaBondData.rate}% (Source: ${koreaBondData.source})`);\r\n          \r\n          // 한국 10Y 국채 수익률 업데이트\r\n          const updatedData = data.map(item => {\r\n            if (item.title === 'Korea 10Y') {\r\n              const oldValue = item.value;\r\n              const newValue = koreaBondData.rate;\r\n              const change = newValue - oldValue;\r\n              \r\n              console.log(`📈 Updated Korea 10Y: ${oldValue}% → ${newValue}% (Change: ${change > 0 ? '+' : ''}${change}%)`);\r\n              \r\n              return {\r\n                ...item,\r\n                value: newValue,\r\n                change: change,\r\n                isPositive: change >= 0,\r\n                isRealData: !koreaBondData.isEstimated, // 추정치가 아니면 실제 데이터\r\n                dataSource: koreaBondData.source,\r\n                isEstimated: koreaBondData.isEstimated\r\n              };\r\n            }\r\n            return item;\r\n          });\r\n          \r\n          setBondMetrics(updatedData);\r\n          console.log('✅ Data updated with fetched data');\r\n        } else {\r\n          console.log('❌ Failed to fetch Korea bond yield, using dummy data');\r\n          setBondMetrics(data);\r\n        }\r\n      } catch (scrapingError) {\r\n        console.log('❌ Error fetching Korea bond yield:', scrapingError);\r\n        console.log('📊 Falling back to dummy data');\r\n        setBondMetrics(data);\r\n      }\r\n      \r\n    } catch (err) {\r\n      setError('Fixed Income 데이터를 불러올 수 없습니다.');\r\n      console.error('❌ Error fetching fixed income data:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 컴포넌트 마운트 시 데이터 로드\r\n  useEffect(() => {\r\n    fetchFixedIncomeData();\r\n  }, []);\r\n\r\n  // 채권 지표 클릭 핸들러 - Trading Economics 페이지 열기\r\n  const handleBondClick = (title) => {\r\n    const url = TRADING_ECONOMICS_URLS[title];\r\n    if (url) {\r\n      window.open(url, '_blank', 'noopener,noreferrer');\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <PageLayout title=\"Fixed Income\">\r\n        <LoadingCard>Fixed Income 데이터를 불러오는 중...</LoadingCard>\r\n      </PageLayout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <PageLayout title=\"Fixed Income\">\r\n      <ButtonContainer>\r\n        <RefreshButton onClick={fetchFixedIncomeData}>\r\n          🔄 데이터 새로고침\r\n        </RefreshButton>\r\n        <TestButton onClick={runWebScrapingTest} disabled={testing}>\r\n          {testing ? '테스트 중...' : '웹 스크래핑 테스트'}\r\n        </TestButton>\r\n      </ButtonContainer>\r\n\r\n      {testResult && (\r\n        <TestResult success={testResult.includes('✅')}>\r\n          {testResult}\r\n        </TestResult>\r\n      )}\r\n\r\n      <MetricsGrid>\r\n        {bondMetrics.map((metric, index) => (\r\n          <MetricCard \r\n            key={index} \r\n            onClick={() => handleBondClick(metric.title)}\r\n            isRealData={metric.isRealData}\r\n          >\r\n            <MetricTitle isRealData={metric.isRealData}>{metric.title}</MetricTitle>\r\n            {metric.error ? (\r\n              <div style={{ color: '#e74c3c', textAlign: 'center' }}>데이터 오류</div>\r\n            ) : (\r\n              <>\r\n                <MetricValue>\r\n                  {formatPercent(metric.value)}\r\n                </MetricValue>\r\n                <MetricChange isPositive={metric.isPositive}>\r\n                  {formatPercent(metric.change)}\r\n                </MetricChange>\r\n                <DataSourceIndicator isRealData={metric.isRealData}>\r\n                  {metric.isRealData ? '실제 데이터' : '더미 데이터'}\r\n                </DataSourceIndicator>\r\n                <DataSourceInfo isRealData={metric.isRealData}>\r\n                  {metric.dataSource ? `소스: ${metric.dataSource}` : '더미 데이터'}\r\n                  {metric.isEstimated && ' (추정치)'}\r\n                </DataSourceInfo>\r\n              </>\r\n            )}\r\n          </MetricCard>\r\n        ))}\r\n      </MetricsGrid>\r\n\r\n      <ClickHint>\r\n        💡 각 지표를 클릭하면 Trading Economics에서 상세 정보를 확인할 수 있습니다\r\n      </ClickHint>\r\n    </PageLayout>\r\n  );\r\n};\r\n\r\nexport default FixedIncomePage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}