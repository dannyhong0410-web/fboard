{"ast":null,"code":"// Yahoo Finance APIÎ•º ÏÇ¨Ïö©Ìïú FX Îç∞Ïù¥ÌÑ∞ ÏÑúÎπÑÏä§\n\n// Ï£ºÏöî ÌôòÏú® Ïã¨Î≥º Îß§Ìïë\nconst FX_SYMBOLS = {\n  'USD/KRW': 'KRW=X',\n  // Îã¨Îü¨/Ïõê\n  'EUR/KRW': 'EURKRW=X',\n  // Ïú†Î°ú/Ïõê\n  'JPY/KRW': 'JPYKRW=X',\n  // Ïóî/Ïõê\n  'CNY/KRW': 'CNYKRW=X',\n  // ÏúÑÏïà/Ïõê\n  'GBP/KRW': 'GBPKRW=X',\n  // ÌååÏö¥Îìú/Ïõê\n  'EUR/USD': 'EURUSD=X',\n  // Ïú†Î°ú/Îã¨Îü¨\n  'USD/JPY': 'USDJPY=X',\n  // Îã¨Îü¨/Ïóî\n  'GBP/USD': 'GBPUSD=X',\n  // ÌååÏö¥Îìú/Îã¨Îü¨\n  'USD/CNY': 'USDCNY=X',\n  // Îã¨Îü¨/ÏúÑÏïà\n  'EUR/JPY': 'EURJPY=X',\n  // Ïú†Î°ú/Ïóî\n  'AUD/USD': 'AUDUSD=X',\n  // Ìò∏Ï£ºÎã¨Îü¨/Îã¨Îü¨\n  'USD/CAD': 'USDCAD=X',\n  // Îã¨Îü¨/Ï∫êÎÇòÎã§Îã¨Îü¨\n  'USD/CHF': 'USDCHF=X',\n  // Îã¨Îü¨/Ïä§ÏúÑÏä§ÌîÑÎûë\n  'NZD/USD': 'NZDUSD=X',\n  // Îâ¥ÏßàÎûúÎìúÎã¨Îü¨/Îã¨Îü¨\n  'USD/SGD': 'USDSGD=X' // Îã¨Îü¨/Ïã±Í∞ÄÌè¨Î•¥Îã¨Îü¨\n};\n\n// Yahoo Finance APIÏóêÏÑú ÌôòÏú® Îç∞Ïù¥ÌÑ∞ Í∞ÄÏ†∏Ïò§Í∏∞\nconst fetchFXDataFromYahoo = async symbol => {\n  try {\n    const url = `https://query1.finance.yahoo.com/v8/finance/chart/${symbol}?interval=1d&range=1d`;\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    if (data && data.chart && data.chart.result && data.chart.result[0]) {\n      const result = data.chart.result[0];\n      const meta = result.meta;\n      const regularMarketPrice = meta.regularMarketPrice;\n      const previousClose = meta.previousClose;\n      if (regularMarketPrice && previousClose) {\n        const change = regularMarketPrice - previousClose;\n        const changePercent = change / previousClose * 100;\n        return {\n          price: regularMarketPrice,\n          change: change,\n          changePercent: changePercent,\n          previousClose: previousClose,\n          isPositive: change >= 0\n        };\n      }\n    }\n    throw new Error('No valid data from Yahoo Finance');\n  } catch (error) {\n    console.error(`Error fetching ${symbol}:`, error);\n    return null;\n  }\n};\n\n// ÌòÑÏã§Ï†ÅÏù∏ ÎçîÎØ∏ FX Îç∞Ïù¥ÌÑ∞ (2024ÎÖÑ 12Ïõî Í∏∞Ï§Ä)\nconst DUMMY_FX_DATA = [{\n  title: 'USD/KRW',\n  value: 1345.67,\n  change: 0.15,\n  isPositive: true\n}, {\n  title: 'EUR/KRW',\n  value: 1459.23,\n  change: -0.21,\n  isPositive: false\n}, {\n  title: 'JPY/KRW',\n  value: 9.12,\n  change: 0.45,\n  isPositive: true\n}, {\n  title: 'CNY/KRW',\n  value: 186.34,\n  change: -0.12,\n  isPositive: false\n}, {\n  title: 'GBP/KRW',\n  value: 1702.45,\n  change: 0.32,\n  isPositive: true\n}, {\n  title: 'EUR/USD',\n  value: 1.0856,\n  change: -0.21,\n  isPositive: false\n}, {\n  title: 'USD/JPY',\n  value: 148.45,\n  change: 0.45,\n  isPositive: true\n}, {\n  title: 'GBP/USD',\n  value: 1.2654,\n  change: 0.32,\n  isPositive: true\n}, {\n  title: 'USD/CNY',\n  value: 7.2345,\n  change: -0.12,\n  isPositive: false\n}, {\n  title: 'EUR/JPY',\n  value: 161.23,\n  change: 0.24,\n  isPositive: true\n}, {\n  title: 'AUD/USD',\n  value: 0.6756,\n  change: 0.18,\n  isPositive: true\n}, {\n  title: 'USD/CAD',\n  value: 1.3456,\n  change: -0.08,\n  isPositive: false\n}, {\n  title: 'USD/CHF',\n  value: 0.8923,\n  change: 0.12,\n  isPositive: true\n}, {\n  title: 'NZD/USD',\n  value: 0.6234,\n  change: 0.25,\n  isPositive: true\n}, {\n  title: 'USD/SGD',\n  value: 1.3456,\n  change: -0.05,\n  isPositive: false\n}];\n\n// Î™®Îì† ÌôòÏú® Îç∞Ïù¥ÌÑ∞ Í∞ÄÏ†∏Ïò§Í∏∞\nexport const fetchAllFXData = async () => {\n  try {\n    console.log('üîÑ Fetching FX data from Yahoo Finance...');\n    const fxData = [];\n    const promises = [];\n\n    // Î™®Îì† ÌôòÏú® Ïã¨Î≥ºÏóê ÎåÄÌï¥ Î≥ëÎ†¨Î°ú Îç∞Ïù¥ÌÑ∞ Í∞ÄÏ†∏Ïò§Í∏∞\n    for (const [name, symbol] of Object.entries(FX_SYMBOLS)) {\n      promises.push(fetchFXDataFromYahoo(symbol).then(data => {\n        if (data) {\n          console.log(`‚úÖ ${name}: ${data.price} (${data.isPositive ? '+' : ''}${data.changePercent.toFixed(2)}%)`);\n          return {\n            title: name,\n            value: data.price,\n            change: data.changePercent,\n            isPositive: data.isPositive,\n            symbol: symbol,\n            isRealData: true,\n            dataSource: 'Yahoo Finance'\n          };\n        } else {\n          console.log(`‚ùå Failed to fetch ${name}`);\n          return null;\n        }\n      }).catch(error => {\n        console.log(`‚ùå Error fetching ${name}:`, error.message);\n        return null;\n      }));\n    }\n\n    // Î™®Îì† ÏöîÏ≤≠ ÏôÑÎ£å ÎåÄÍ∏∞\n    const results = await Promise.all(promises);\n\n    // ÏÑ±Í≥µÌïú Îç∞Ïù¥ÌÑ∞Îßå ÌïÑÌÑ∞ÎßÅ\n    const successfulData = results.filter(data => data !== null);\n    console.log(`‚úÖ Successfully fetched ${successfulData.length}/${Object.keys(FX_SYMBOLS).length} FX rates`);\n\n    // Ïã§Ï†ú Îç∞Ïù¥ÌÑ∞Í∞Ä ÏûàÏúºÎ©¥ Î∞òÌôò, ÏóÜÏúºÎ©¥ ÎçîÎØ∏ Îç∞Ïù¥ÌÑ∞ ÏÇ¨Ïö©\n    if (successfulData.length > 0) {\n      return successfulData;\n    } else {\n      console.log('‚ùå No real data available, using dummy data...');\n      return DUMMY_FX_DATA.map(item => ({\n        ...item,\n        isRealData: false,\n        dataSource: 'Dummy Data',\n        symbol: FX_SYMBOLS[item.title] || ''\n      }));\n    }\n  } catch (error) {\n    console.error('‚ùå Error fetching FX data:', error);\n    console.log('üìä Falling back to dummy data...');\n\n    // ÏóêÎü¨ Î∞úÏÉù Ïãú ÎçîÎØ∏ Îç∞Ïù¥ÌÑ∞ Î∞òÌôò\n    return DUMMY_FX_DATA.map(item => ({\n      ...item,\n      isRealData: false,\n      dataSource: 'Dummy Data (Error)',\n      symbol: FX_SYMBOLS[item.title] || ''\n    }));\n  }\n};\n\n// ÌäπÏ†ï ÌôòÏú® Îç∞Ïù¥ÌÑ∞ Í∞ÄÏ†∏Ïò§Í∏∞\nexport const fetchFXRate = async symbol => {\n  const yahooSymbol = FX_SYMBOLS[symbol];\n  if (!yahooSymbol) {\n    throw new Error(`Unknown symbol: ${symbol}`);\n  }\n  return await fetchFXDataFromYahoo(yahooSymbol);\n};\n\n// Yahoo Finance URL Îß§Ìïë\nexport const YAHOO_FINANCE_URLS = {\n  'USD/KRW': 'https://finance.yahoo.com/quote/KRW=X',\n  'EUR/KRW': 'https://finance.yahoo.com/quote/EURKRW=X',\n  'JPY/KRW': 'https://finance.yahoo.com/quote/JPYKRW=X',\n  'CNY/KRW': 'https://finance.yahoo.com/quote/CNYKRW=X',\n  'GBP/KRW': 'https://finance.yahoo.com/quote/GBPKRW=X',\n  'EUR/USD': 'https://finance.yahoo.com/quote/EURUSD=X',\n  'USD/JPY': 'https://finance.yahoo.com/quote/USDJPY=X',\n  'GBP/USD': 'https://finance.yahoo.com/quote/GBPUSD=X',\n  'USD/CNY': 'https://finance.yahoo.com/quote/USDCNY=X',\n  'EUR/JPY': 'https://finance.yahoo.com/quote/EURJPY=X',\n  'AUD/USD': 'https://finance.yahoo.com/quote/AUDUSD=X',\n  'USD/CAD': 'https://finance.yahoo.com/quote/USDCAD=X',\n  'USD/CHF': 'https://finance.yahoo.com/quote/USDCHF=X',\n  'NZD/USD': 'https://finance.yahoo.com/quote/NZDUSD=X',\n  'USD/SGD': 'https://finance.yahoo.com/quote/USDSGD=X'\n};","map":{"version":3,"names":["FX_SYMBOLS","fetchFXDataFromYahoo","symbol","url","response","fetch","ok","Error","status","data","json","chart","result","meta","regularMarketPrice","previousClose","change","changePercent","price","isPositive","error","console","DUMMY_FX_DATA","title","value","fetchAllFXData","log","fxData","promises","name","Object","entries","push","then","toFixed","isRealData","dataSource","catch","message","results","Promise","all","successfulData","filter","length","keys","map","item","fetchFXRate","yahooSymbol","YAHOO_FINANCE_URLS"],"sources":["C:/Users/ÌôçÏÑ±Í¥Ä/Desktop/FBoard/src/services/fxApi.js"],"sourcesContent":["// Yahoo Finance APIÎ•º ÏÇ¨Ïö©Ìïú FX Îç∞Ïù¥ÌÑ∞ ÏÑúÎπÑÏä§\r\n\r\n// Ï£ºÏöî ÌôòÏú® Ïã¨Î≥º Îß§Ìïë\r\nconst FX_SYMBOLS = {\r\n  'USD/KRW': 'KRW=X', // Îã¨Îü¨/Ïõê\r\n  'EUR/KRW': 'EURKRW=X', // Ïú†Î°ú/Ïõê\r\n  'JPY/KRW': 'JPYKRW=X', // Ïóî/Ïõê\r\n  'CNY/KRW': 'CNYKRW=X', // ÏúÑÏïà/Ïõê\r\n  'GBP/KRW': 'GBPKRW=X', // ÌååÏö¥Îìú/Ïõê\r\n  'EUR/USD': 'EURUSD=X', // Ïú†Î°ú/Îã¨Îü¨\r\n  'USD/JPY': 'USDJPY=X', // Îã¨Îü¨/Ïóî\r\n  'GBP/USD': 'GBPUSD=X', // ÌååÏö¥Îìú/Îã¨Îü¨\r\n  'USD/CNY': 'USDCNY=X', // Îã¨Îü¨/ÏúÑÏïà\r\n  'EUR/JPY': 'EURJPY=X', // Ïú†Î°ú/Ïóî\r\n  'AUD/USD': 'AUDUSD=X', // Ìò∏Ï£ºÎã¨Îü¨/Îã¨Îü¨\r\n  'USD/CAD': 'USDCAD=X', // Îã¨Îü¨/Ï∫êÎÇòÎã§Îã¨Îü¨\r\n  'USD/CHF': 'USDCHF=X', // Îã¨Îü¨/Ïä§ÏúÑÏä§ÌîÑÎûë\r\n  'NZD/USD': 'NZDUSD=X', // Îâ¥ÏßàÎûúÎìúÎã¨Îü¨/Îã¨Îü¨\r\n  'USD/SGD': 'USDSGD=X' // Îã¨Îü¨/Ïã±Í∞ÄÌè¨Î•¥Îã¨Îü¨\r\n};\r\n\r\n// Yahoo Finance APIÏóêÏÑú ÌôòÏú® Îç∞Ïù¥ÌÑ∞ Í∞ÄÏ†∏Ïò§Í∏∞\r\nconst fetchFXDataFromYahoo = async (symbol) => {\r\n  try {\r\n    const url = `https://query1.finance.yahoo.com/v8/finance/chart/${symbol}?interval=1d&range=1d`;\r\n    \r\n    const response = await fetch(url);\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    \r\n    const data = await response.json();\r\n    \r\n    if (data && data.chart && data.chart.result && data.chart.result[0]) {\r\n      const result = data.chart.result[0];\r\n      const meta = result.meta;\r\n      const regularMarketPrice = meta.regularMarketPrice;\r\n      const previousClose = meta.previousClose;\r\n      \r\n      if (regularMarketPrice && previousClose) {\r\n        const change = regularMarketPrice - previousClose;\r\n        const changePercent = (change / previousClose) * 100;\r\n        \r\n        return {\r\n          price: regularMarketPrice,\r\n          change: change,\r\n          changePercent: changePercent,\r\n          previousClose: previousClose,\r\n          isPositive: change >= 0\r\n        };\r\n      }\r\n    }\r\n    \r\n    throw new Error('No valid data from Yahoo Finance');\r\n  } catch (error) {\r\n    console.error(`Error fetching ${symbol}:`, error);\r\n    return null;\r\n  }\r\n};\r\n\r\n// ÌòÑÏã§Ï†ÅÏù∏ ÎçîÎØ∏ FX Îç∞Ïù¥ÌÑ∞ (2024ÎÖÑ 12Ïõî Í∏∞Ï§Ä)\r\nconst DUMMY_FX_DATA = [\r\n  { title: 'USD/KRW', value: 1345.67, change: 0.15, isPositive: true },\r\n  { title: 'EUR/KRW', value: 1459.23, change: -0.21, isPositive: false },\r\n  { title: 'JPY/KRW', value: 9.12, change: 0.45, isPositive: true },\r\n  { title: 'CNY/KRW', value: 186.34, change: -0.12, isPositive: false },\r\n  { title: 'GBP/KRW', value: 1702.45, change: 0.32, isPositive: true },\r\n  { title: 'EUR/USD', value: 1.0856, change: -0.21, isPositive: false },\r\n  { title: 'USD/JPY', value: 148.45, change: 0.45, isPositive: true },\r\n  { title: 'GBP/USD', value: 1.2654, change: 0.32, isPositive: true },\r\n  { title: 'USD/CNY', value: 7.2345, change: -0.12, isPositive: false },\r\n  { title: 'EUR/JPY', value: 161.23, change: 0.24, isPositive: true },\r\n  { title: 'AUD/USD', value: 0.6756, change: 0.18, isPositive: true },\r\n  { title: 'USD/CAD', value: 1.3456, change: -0.08, isPositive: false },\r\n  { title: 'USD/CHF', value: 0.8923, change: 0.12, isPositive: true },\r\n  { title: 'NZD/USD', value: 0.6234, change: 0.25, isPositive: true },\r\n  { title: 'USD/SGD', value: 1.3456, change: -0.05, isPositive: false }\r\n];\r\n\r\n// Î™®Îì† ÌôòÏú® Îç∞Ïù¥ÌÑ∞ Í∞ÄÏ†∏Ïò§Í∏∞\r\nexport const fetchAllFXData = async () => {\r\n  try {\r\n    console.log('üîÑ Fetching FX data from Yahoo Finance...');\r\n    \r\n    const fxData = [];\r\n    const promises = [];\r\n    \r\n    // Î™®Îì† ÌôòÏú® Ïã¨Î≥ºÏóê ÎåÄÌï¥ Î≥ëÎ†¨Î°ú Îç∞Ïù¥ÌÑ∞ Í∞ÄÏ†∏Ïò§Í∏∞\r\n    for (const [name, symbol] of Object.entries(FX_SYMBOLS)) {\r\n      promises.push(\r\n        fetchFXDataFromYahoo(symbol)\r\n          .then(data => {\r\n            if (data) {\r\n              console.log(`‚úÖ ${name}: ${data.price} (${data.isPositive ? '+' : ''}${data.changePercent.toFixed(2)}%)`);\r\n              return {\r\n                title: name,\r\n                value: data.price,\r\n                change: data.changePercent,\r\n                isPositive: data.isPositive,\r\n                symbol: symbol,\r\n                isRealData: true,\r\n                dataSource: 'Yahoo Finance'\r\n              };\r\n            } else {\r\n              console.log(`‚ùå Failed to fetch ${name}`);\r\n              return null;\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.log(`‚ùå Error fetching ${name}:`, error.message);\r\n            return null;\r\n          })\r\n      );\r\n    }\r\n    \r\n    // Î™®Îì† ÏöîÏ≤≠ ÏôÑÎ£å ÎåÄÍ∏∞\r\n    const results = await Promise.all(promises);\r\n    \r\n    // ÏÑ±Í≥µÌïú Îç∞Ïù¥ÌÑ∞Îßå ÌïÑÌÑ∞ÎßÅ\r\n    const successfulData = results.filter(data => data !== null);\r\n    \r\n    console.log(`‚úÖ Successfully fetched ${successfulData.length}/${Object.keys(FX_SYMBOLS).length} FX rates`);\r\n    \r\n    // Ïã§Ï†ú Îç∞Ïù¥ÌÑ∞Í∞Ä ÏûàÏúºÎ©¥ Î∞òÌôò, ÏóÜÏúºÎ©¥ ÎçîÎØ∏ Îç∞Ïù¥ÌÑ∞ ÏÇ¨Ïö©\r\n    if (successfulData.length > 0) {\r\n      return successfulData;\r\n    } else {\r\n      console.log('‚ùå No real data available, using dummy data...');\r\n      return DUMMY_FX_DATA.map(item => ({\r\n        ...item,\r\n        isRealData: false,\r\n        dataSource: 'Dummy Data',\r\n        symbol: FX_SYMBOLS[item.title] || ''\r\n      }));\r\n    }\r\n    \r\n  } catch (error) {\r\n    console.error('‚ùå Error fetching FX data:', error);\r\n    console.log('üìä Falling back to dummy data...');\r\n    \r\n    // ÏóêÎü¨ Î∞úÏÉù Ïãú ÎçîÎØ∏ Îç∞Ïù¥ÌÑ∞ Î∞òÌôò\r\n    return DUMMY_FX_DATA.map(item => ({\r\n      ...item,\r\n      isRealData: false,\r\n      dataSource: 'Dummy Data (Error)',\r\n      symbol: FX_SYMBOLS[item.title] || ''\r\n    }));\r\n  }\r\n};\r\n\r\n// ÌäπÏ†ï ÌôòÏú® Îç∞Ïù¥ÌÑ∞ Í∞ÄÏ†∏Ïò§Í∏∞\r\nexport const fetchFXRate = async (symbol) => {\r\n  const yahooSymbol = FX_SYMBOLS[symbol];\r\n  if (!yahooSymbol) {\r\n    throw new Error(`Unknown symbol: ${symbol}`);\r\n  }\r\n  \r\n  return await fetchFXDataFromYahoo(yahooSymbol);\r\n};\r\n\r\n// Yahoo Finance URL Îß§Ìïë\r\nexport const YAHOO_FINANCE_URLS = {\r\n  'USD/KRW': 'https://finance.yahoo.com/quote/KRW=X',\r\n  'EUR/KRW': 'https://finance.yahoo.com/quote/EURKRW=X',\r\n  'JPY/KRW': 'https://finance.yahoo.com/quote/JPYKRW=X',\r\n  'CNY/KRW': 'https://finance.yahoo.com/quote/CNYKRW=X',\r\n  'GBP/KRW': 'https://finance.yahoo.com/quote/GBPKRW=X',\r\n  'EUR/USD': 'https://finance.yahoo.com/quote/EURUSD=X',\r\n  'USD/JPY': 'https://finance.yahoo.com/quote/USDJPY=X',\r\n  'GBP/USD': 'https://finance.yahoo.com/quote/GBPUSD=X',\r\n  'USD/CNY': 'https://finance.yahoo.com/quote/USDCNY=X',\r\n  'EUR/JPY': 'https://finance.yahoo.com/quote/EURJPY=X',\r\n  'AUD/USD': 'https://finance.yahoo.com/quote/AUDUSD=X',\r\n  'USD/CAD': 'https://finance.yahoo.com/quote/USDCAD=X',\r\n  'USD/CHF': 'https://finance.yahoo.com/quote/USDCHF=X',\r\n  'NZD/USD': 'https://finance.yahoo.com/quote/NZDUSD=X',\r\n  'USD/SGD': 'https://finance.yahoo.com/quote/USDSGD=X'\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}