{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uD64D\\uC131\\uAD00\\\\Desktop\\\\FBoard\\\\src\\\\components\\\\FixedIncomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport PageLayout from './PageLayout';\nimport { fetchAllFixedIncomeData, TRADING_ECONOMICS_URLS, testSimpleWebScraping, testTradingEconomicsPage } from '../services/fixedIncomeApi';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MetricsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(175px, 1fr));\n  gap: 15px;\n  margin-bottom: 30px;\n`;\n_c = MetricsGrid;\nconst MetricCard = styled.div`\n  background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n  border-radius: 12px;\n  padding: 15px;\n  border: 1px solid #dee2e6;\n  transition: transform 0.3s ease;\n  cursor: pointer;\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\n  position: relative;\n\n  ${props => props.isRealData && `\n    border: 2px solid #1a5f3c;\n    background: linear-gradient(135deg, #e8f5e8 0%, #d4edda 100%);\n    &::before {\n      content: '🌐';\n      position: absolute;\n      top: 5px;\n      right: 5px;\n      font-size: 12px;\n    }\n  `}\n\n  &:hover {\n    transform: translateY(-3px);\n    background: linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%);\n    border-color: #1a5f3c;\n    box-shadow: 0 6px 20px rgba(26, 95, 60, 0.2);\n  }\n`;\n_c2 = MetricCard;\nconst MetricTitle = styled.h3`\n  color: #2c3e50;\n  font-size: 1rem;\n  margin-bottom: 10px;\n  font-weight: 600;\n  text-align: center;\n  \n  ${props => props.isRealData && `\n    color: #1a5f3c;\n    font-weight: 700;\n  `}\n`;\n_c3 = MetricTitle;\nconst MetricValue = styled.div`\n  color: #1a5f3c;\n  font-size: 1.3rem;\n  font-weight: 700;\n  margin-bottom: 8px;\n  text-align: center;\n`;\n_c4 = MetricValue;\nconst MetricChange = styled.div`\n  color: ${props => props.isPositive ? '#1a5f3c' : '#e74c3c'};\n  font-size: 0.9rem;\n  font-weight: 500;\n  text-align: center;\n`;\n_c5 = MetricChange;\nconst LoadingCard = styled.div`\n  background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n  border-radius: 15px;\n  padding: 25px;\n  border: 1px solid #dee2e6;\n  text-align: center;\n  color: #2c3e50;\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\n`;\n_c6 = LoadingCard;\nconst RefreshButton = styled.button`\n  background: linear-gradient(135deg, #1a5f3c 0%, #2d7a4f 100%);\n  border: none;\n  border-radius: 10px;\n  padding: 12px 24px;\n  color: white;\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  margin-bottom: 20px;\n  box-shadow: 0 4px 15px rgba(26, 95, 60, 0.3);\n\n  &:hover {\n    background: linear-gradient(135deg, #134a30 0%, #1a5f3c 100%);\n    transform: translateY(-2px);\n    box-shadow: 0 6px 20px rgba(26, 95, 60, 0.4);\n  }\n`;\n_c7 = RefreshButton;\nconst ClickHint = styled.div`\n  text-align: center;\n  color: #7f8c8d;\n  font-size: 0.9rem;\n  margin-top: 20px;\n  font-style: italic;\n`;\n_c8 = ClickHint;\nconst DataSourceIndicator = styled.div`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  font-size: 10px;\n  color: ${props => props.isRealData ? '#1a5f3c' : '#7f8c8d'};\n  font-weight: ${props => props.isRealData ? 'bold' : 'normal'};\n  background: ${props => props.isRealData ? 'rgba(26, 95, 60, 0.1)' : 'rgba(127, 140, 141, 0.1)'};\n  padding: 2px 6px;\n  border-radius: 4px;\n  border: 1px solid ${props => props.isRealData ? '#1a5f3c' : '#7f8c8d'};\n`;\n_c9 = DataSourceIndicator;\nconst DataSourceInfo = styled.div`\n  font-size: 9px;\n  color: #7f8c8d;\n  text-align: center;\n  margin-top: 5px;\n  font-style: italic;\n  \n  ${props => props.isRealData && `\n    color: #1a5f3c;\n    font-weight: 500;\n  `}\n`;\n\n// 숫자 포맷팅 함수\n_c0 = DataSourceInfo;\nconst formatNumber = (value, decimals = 2) => {\n  if (value === null || value === undefined || isNaN(value)) {\n    return 'N/A';\n  }\n  const roundedValue = Math.round(value * Math.pow(10, decimals)) / Math.pow(10, decimals);\n  return roundedValue.toLocaleString('ko-KR', {\n    minimumFractionDigits: decimals,\n    maximumFractionDigits: decimals\n  });\n};\n\n// 퍼센트 포맷팅 함수\nconst formatPercent = (value, decimals = 2) => {\n  if (value === null || value === undefined || isNaN(value)) {\n    return 'N/A';\n  }\n  const sign = value >= 0 ? '+' : '';\n  const formattedValue = formatNumber(Math.abs(value), decimals);\n  return `${sign}${formattedValue}%`;\n};\nconst FixedIncomePage = () => {\n  _s();\n  const [bondMetrics, setBondMetrics] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [debugResult, setDebugResult] = useState(null);\n\n  // 웹 스크래핑 기본 테스트\n  const runBasicTest = async () => {\n    try {\n      setLoading(true);\n      setDebugResult(null);\n      console.log('🧪 Running basic web scraping test...');\n      const result = await testSimpleWebScraping();\n      if (result.success) {\n        setDebugResult(`✅ 기본 테스트 성공! Proxy ${result.proxyIndex + 1} 작동 중`);\n      } else {\n        setDebugResult('❌ 기본 테스트 실패 - 모든 프록시가 작동하지 않음');\n      }\n    } catch (error) {\n      setDebugResult('❌ 테스트 중 오류 발생');\n      console.error('❌ Test error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 영국 기준금리 페이지 테스트\n  const runUKTest = async () => {\n    try {\n      setLoading(true);\n      setDebugResult(null);\n      console.log('🇬🇧 Testing UK interest rate page...');\n      const result = await testTradingEconomicsPage('영국 기준 금리');\n      if (result.success) {\n        setDebugResult(`✅ 영국 페이지 테스트 성공! ${result.rates.length}개 금리 발견: ${result.rates.join(', ')}%`);\n      } else {\n        setDebugResult(`❌ 영국 페이지 테스트 실패: ${result.reason}`);\n      }\n    } catch (error) {\n      setDebugResult('❌ 테스트 중 오류 발생');\n      console.error('❌ Test error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fixed Income 데이터 가져오기 (주식 API와 비슷한 방식)\n  const fetchFixedIncomeData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      console.log('🔄 Starting Fixed Income data fetch...');\n\n      // 새로운 API를 사용하여 모든 데이터 가져오기 (주식 API와 비슷한 방식)\n      const data = await fetchAllFixedIncomeData();\n      if (data && data.length > 0) {\n        console.log(`✅ Successfully loaded ${data.length} Fixed Income rates`);\n\n        // 실제 데이터가 있는지 확인\n        const realDataCount = data.filter(item => item.isRealData).length;\n        if (realDataCount === 0) {\n          console.log('⚠️ No real data available, showing dummy data');\n        } else {\n          console.log(`✅ ${realDataCount} real Fixed Income rates loaded`);\n        }\n        setBondMetrics(data);\n      } else {\n        console.log('❌ No Fixed Income data received');\n        setError('Fixed Income 데이터를 불러올 수 없습니다.');\n      }\n    } catch (err) {\n      setError('Fixed Income 데이터를 불러올 수 없습니다.');\n      console.error('❌ Error fetching Fixed Income data:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 컴포넌트 마운트 시 데이터 로드\n  useEffect(() => {\n    fetchFixedIncomeData();\n  }, []);\n\n  // 채권 지표 클릭 핸들러 - Trading Economics 페이지 열기\n  const handleBondClick = title => {\n    const url = TRADING_ECONOMICS_URLS[title];\n    if (url) {\n      window.open(url, '_blank', 'noopener,noreferrer');\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(PageLayout, {\n      title: \"Fixed Income\",\n      children: /*#__PURE__*/_jsxDEV(LoadingCard, {\n        children: \"Fixed Income \\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(PageLayout, {\n    title: \"Fixed Income\",\n    children: [/*#__PURE__*/_jsxDEV(RefreshButton, {\n      onClick: fetchFixedIncomeData,\n      children: \"\\uD83D\\uDD04 \\uB370\\uC774\\uD130 \\uC0C8\\uB85C\\uACE0\\uCE68\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      children: [\"\\uC624\\uB958: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MetricsGrid, {\n      children: bondMetrics.map((metric, index) => /*#__PURE__*/_jsxDEV(MetricCard, {\n        onClick: () => handleBondClick(metric.title),\n        isRealData: metric.isRealData,\n        children: [/*#__PURE__*/_jsxDEV(MetricTitle, {\n          isRealData: metric.isRealData,\n          children: metric.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this), metric.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: '#e74c3c',\n            textAlign: 'center'\n          },\n          children: \"\\uB370\\uC774\\uD130 \\uC624\\uB958\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(MetricValue, {\n            children: formatPercent(metric.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(MetricChange, {\n            isPositive: metric.isPositive,\n            children: formatPercent(metric.change)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(DataSourceIndicator, {\n            isRealData: metric.isRealData,\n            children: metric.isRealData ? '실제 데이터' : '더미 데이터'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(DataSourceInfo, {\n            isRealData: metric.isRealData,\n            children: [metric.dataSource ? `소스: ${metric.dataSource}` : '더미 데이터', metric.isEstimated && ' (추정치)']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ClickHint, {\n      children: \"\\uD83D\\uDCA1 \\uAC01 \\uC9C0\\uD45C\\uB97C \\uD074\\uB9AD\\uD558\\uBA74 Trading Economics\\uC5D0\\uC11C \\uC0C1\\uC138 \\uC815\\uBCF4\\uB97C \\uD655\\uC778\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 5\n  }, this);\n};\n_s(FixedIncomePage, \"JgA+/Y24owtbjt/VXVWAvqqg0i0=\");\n_c1 = FixedIncomePage;\nexport default FixedIncomePage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1;\n$RefreshReg$(_c, \"MetricsGrid\");\n$RefreshReg$(_c2, \"MetricCard\");\n$RefreshReg$(_c3, \"MetricTitle\");\n$RefreshReg$(_c4, \"MetricValue\");\n$RefreshReg$(_c5, \"MetricChange\");\n$RefreshReg$(_c6, \"LoadingCard\");\n$RefreshReg$(_c7, \"RefreshButton\");\n$RefreshReg$(_c8, \"ClickHint\");\n$RefreshReg$(_c9, \"DataSourceIndicator\");\n$RefreshReg$(_c0, \"DataSourceInfo\");\n$RefreshReg$(_c1, \"FixedIncomePage\");","map":{"version":3,"names":["React","useState","useEffect","styled","PageLayout","fetchAllFixedIncomeData","TRADING_ECONOMICS_URLS","testSimpleWebScraping","testTradingEconomicsPage","jsxDEV","_jsxDEV","Fragment","_Fragment","MetricsGrid","div","_c","MetricCard","props","isRealData","_c2","MetricTitle","h3","_c3","MetricValue","_c4","MetricChange","isPositive","_c5","LoadingCard","_c6","RefreshButton","button","_c7","ClickHint","_c8","DataSourceIndicator","_c9","DataSourceInfo","_c0","formatNumber","value","decimals","undefined","isNaN","roundedValue","Math","round","pow","toLocaleString","minimumFractionDigits","maximumFractionDigits","formatPercent","sign","formattedValue","abs","FixedIncomePage","_s","bondMetrics","setBondMetrics","loading","setLoading","error","setError","debugResult","setDebugResult","runBasicTest","console","log","result","success","proxyIndex","runUKTest","rates","length","join","reason","fetchFixedIncomeData","data","realDataCount","filter","item","err","handleBondClick","title","url","window","open","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ErrorMessage","map","metric","index","style","color","textAlign","change","dataSource","isEstimated","_c1","$RefreshReg$"],"sources":["C:/Users/홍성관/Desktop/FBoard/src/components/FixedIncomePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport PageLayout from './PageLayout';\r\nimport { fetchAllFixedIncomeData, TRADING_ECONOMICS_URLS, testSimpleWebScraping, testTradingEconomicsPage } from '../services/fixedIncomeApi';\r\n\r\nconst MetricsGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(175px, 1fr));\r\n  gap: 15px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst MetricCard = styled.div`\r\n  background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\r\n  border-radius: 12px;\r\n  padding: 15px;\r\n  border: 1px solid #dee2e6;\r\n  transition: transform 0.3s ease;\r\n  cursor: pointer;\r\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\r\n  position: relative;\r\n\r\n  ${props => props.isRealData && `\r\n    border: 2px solid #1a5f3c;\r\n    background: linear-gradient(135deg, #e8f5e8 0%, #d4edda 100%);\r\n    &::before {\r\n      content: '🌐';\r\n      position: absolute;\r\n      top: 5px;\r\n      right: 5px;\r\n      font-size: 12px;\r\n    }\r\n  `}\r\n\r\n  &:hover {\r\n    transform: translateY(-3px);\r\n    background: linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%);\r\n    border-color: #1a5f3c;\r\n    box-shadow: 0 6px 20px rgba(26, 95, 60, 0.2);\r\n  }\r\n`;\r\n\r\nconst MetricTitle = styled.h3`\r\n  color: #2c3e50;\r\n  font-size: 1rem;\r\n  margin-bottom: 10px;\r\n  font-weight: 600;\r\n  text-align: center;\r\n  \r\n  ${props => props.isRealData && `\r\n    color: #1a5f3c;\r\n    font-weight: 700;\r\n  `}\r\n`;\r\n\r\nconst MetricValue = styled.div`\r\n  color: #1a5f3c;\r\n  font-size: 1.3rem;\r\n  font-weight: 700;\r\n  margin-bottom: 8px;\r\n  text-align: center;\r\n`;\r\n\r\nconst MetricChange = styled.div`\r\n  color: ${props => props.isPositive ? '#1a5f3c' : '#e74c3c'};\r\n  font-size: 0.9rem;\r\n  font-weight: 500;\r\n  text-align: center;\r\n`;\r\n\r\nconst LoadingCard = styled.div`\r\n  background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\r\n  border-radius: 15px;\r\n  padding: 25px;\r\n  border: 1px solid #dee2e6;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst RefreshButton = styled.button`\r\n  background: linear-gradient(135deg, #1a5f3c 0%, #2d7a4f 100%);\r\n  border: none;\r\n  border-radius: 10px;\r\n  padding: 12px 24px;\r\n  color: white;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  margin-bottom: 20px;\r\n  box-shadow: 0 4px 15px rgba(26, 95, 60, 0.3);\r\n\r\n  &:hover {\r\n    background: linear-gradient(135deg, #134a30 0%, #1a5f3c 100%);\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 6px 20px rgba(26, 95, 60, 0.4);\r\n  }\r\n`;\r\n\r\nconst ClickHint = styled.div`\r\n  text-align: center;\r\n  color: #7f8c8d;\r\n  font-size: 0.9rem;\r\n  margin-top: 20px;\r\n  font-style: italic;\r\n`;\r\n\r\nconst DataSourceIndicator = styled.div`\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 5px;\r\n  font-size: 10px;\r\n  color: ${props => props.isRealData ? '#1a5f3c' : '#7f8c8d'};\r\n  font-weight: ${props => props.isRealData ? 'bold' : 'normal'};\r\n  background: ${props => props.isRealData ? 'rgba(26, 95, 60, 0.1)' : 'rgba(127, 140, 141, 0.1)'};\r\n  padding: 2px 6px;\r\n  border-radius: 4px;\r\n  border: 1px solid ${props => props.isRealData ? '#1a5f3c' : '#7f8c8d'};\r\n`;\r\n\r\nconst DataSourceInfo = styled.div`\r\n  font-size: 9px;\r\n  color: #7f8c8d;\r\n  text-align: center;\r\n  margin-top: 5px;\r\n  font-style: italic;\r\n  \r\n  ${props => props.isRealData && `\r\n    color: #1a5f3c;\r\n    font-weight: 500;\r\n  `}\r\n`;\r\n\r\n// 숫자 포맷팅 함수\r\nconst formatNumber = (value, decimals = 2) => {\r\n  if (value === null || value === undefined || isNaN(value)) {\r\n    return 'N/A';\r\n  }\r\n  \r\n  const roundedValue = Math.round(value * Math.pow(10, decimals)) / Math.pow(10, decimals);\r\n  \r\n  return roundedValue.toLocaleString('ko-KR', {\r\n    minimumFractionDigits: decimals,\r\n    maximumFractionDigits: decimals\r\n  });\r\n};\r\n\r\n// 퍼센트 포맷팅 함수\r\nconst formatPercent = (value, decimals = 2) => {\r\n  if (value === null || value === undefined || isNaN(value)) {\r\n    return 'N/A';\r\n  }\r\n  \r\n  const sign = value >= 0 ? '+' : '';\r\n  const formattedValue = formatNumber(Math.abs(value), decimals);\r\n  \r\n  return `${sign}${formattedValue}%`;\r\n};\r\n\r\nconst FixedIncomePage = () => {\r\n  const [bondMetrics, setBondMetrics] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [debugResult, setDebugResult] = useState(null);\r\n\r\n  // 웹 스크래핑 기본 테스트\r\n  const runBasicTest = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setDebugResult(null);\r\n      \r\n      console.log('🧪 Running basic web scraping test...');\r\n      const result = await testSimpleWebScraping();\r\n      \r\n      if (result.success) {\r\n        setDebugResult(`✅ 기본 테스트 성공! Proxy ${result.proxyIndex + 1} 작동 중`);\r\n      } else {\r\n        setDebugResult('❌ 기본 테스트 실패 - 모든 프록시가 작동하지 않음');\r\n      }\r\n    } catch (error) {\r\n      setDebugResult('❌ 테스트 중 오류 발생');\r\n      console.error('❌ Test error:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 영국 기준금리 페이지 테스트\r\n  const runUKTest = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setDebugResult(null);\r\n      \r\n      console.log('🇬🇧 Testing UK interest rate page...');\r\n      const result = await testTradingEconomicsPage('영국 기준 금리');\r\n      \r\n      if (result.success) {\r\n        setDebugResult(`✅ 영국 페이지 테스트 성공! ${result.rates.length}개 금리 발견: ${result.rates.join(', ')}%`);\r\n      } else {\r\n        setDebugResult(`❌ 영국 페이지 테스트 실패: ${result.reason}`);\r\n      }\r\n    } catch (error) {\r\n      setDebugResult('❌ 테스트 중 오류 발생');\r\n      console.error('❌ Test error:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fixed Income 데이터 가져오기 (주식 API와 비슷한 방식)\r\n  const fetchFixedIncomeData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      console.log('🔄 Starting Fixed Income data fetch...');\r\n      \r\n      // 새로운 API를 사용하여 모든 데이터 가져오기 (주식 API와 비슷한 방식)\r\n      const data = await fetchAllFixedIncomeData();\r\n      \r\n      if (data && data.length > 0) {\r\n        console.log(`✅ Successfully loaded ${data.length} Fixed Income rates`);\r\n        \r\n        // 실제 데이터가 있는지 확인\r\n        const realDataCount = data.filter(item => item.isRealData).length;\r\n        if (realDataCount === 0) {\r\n          console.log('⚠️ No real data available, showing dummy data');\r\n        } else {\r\n          console.log(`✅ ${realDataCount} real Fixed Income rates loaded`);\r\n        }\r\n        \r\n        setBondMetrics(data);\r\n      } else {\r\n        console.log('❌ No Fixed Income data received');\r\n        setError('Fixed Income 데이터를 불러올 수 없습니다.');\r\n      }\r\n      \r\n    } catch (err) {\r\n      setError('Fixed Income 데이터를 불러올 수 없습니다.');\r\n      console.error('❌ Error fetching Fixed Income data:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 컴포넌트 마운트 시 데이터 로드\r\n  useEffect(() => {\r\n    fetchFixedIncomeData();\r\n  }, []);\r\n\r\n  // 채권 지표 클릭 핸들러 - Trading Economics 페이지 열기\r\n  const handleBondClick = (title) => {\r\n    const url = TRADING_ECONOMICS_URLS[title];\r\n    if (url) {\r\n      window.open(url, '_blank', 'noopener,noreferrer');\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <PageLayout title=\"Fixed Income\">\r\n        <LoadingCard>Fixed Income 데이터를 불러오는 중...</LoadingCard>\r\n      </PageLayout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <PageLayout title=\"Fixed Income\">\r\n      <RefreshButton onClick={fetchFixedIncomeData}>\r\n        🔄 데이터 새로고침\r\n      </RefreshButton>\r\n\r\n      {error && (\r\n        <ErrorMessage>\r\n          오류: {error}\r\n        </ErrorMessage>\r\n      )}\r\n\r\n      <MetricsGrid>\r\n        {bondMetrics.map((metric, index) => (\r\n          <MetricCard \r\n            key={index} \r\n            onClick={() => handleBondClick(metric.title)}\r\n            isRealData={metric.isRealData}\r\n          >\r\n            <MetricTitle isRealData={metric.isRealData}>{metric.title}</MetricTitle>\r\n            {metric.error ? (\r\n              <div style={{ color: '#e74c3c', textAlign: 'center' }}>데이터 오류</div>\r\n            ) : (\r\n              <>\r\n                <MetricValue>\r\n                  {formatPercent(metric.value)}\r\n                </MetricValue>\r\n                <MetricChange isPositive={metric.isPositive}>\r\n                  {formatPercent(metric.change)}\r\n                </MetricChange>\r\n                <DataSourceIndicator isRealData={metric.isRealData}>\r\n                  {metric.isRealData ? '실제 데이터' : '더미 데이터'}\r\n                </DataSourceIndicator>\r\n                <DataSourceInfo isRealData={metric.isRealData}>\r\n                  {metric.dataSource ? `소스: ${metric.dataSource}` : '더미 데이터'}\r\n                  {metric.isEstimated && ' (추정치)'}\r\n                </DataSourceInfo>\r\n              </>\r\n            )}\r\n          </MetricCard>\r\n        ))}\r\n      </MetricsGrid>\r\n\r\n      <ClickHint>\r\n        💡 각 지표를 클릭하면 Trading Economics에서 상세 정보를 확인할 수 있습니다\r\n      </ClickHint>\r\n    </PageLayout>\r\n  );\r\n};\r\n\r\nexport default FixedIncomePage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}